<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://wanntonn.github.io/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Jul 2021 23:35:24 +0800</lastBuildDate><atom:link href="https://wanntonn.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Test</title>
      <link>https://wanntonn.github.io/posts/test/</link>
      <pubDate>Sat, 24 Jul 2021 23:35:24 +0800</pubDate>
      
      <guid>https://wanntonn.github.io/posts/test/</guid>
      <description>asdasd </description>
    </item>
    
    <item>
      <title>MacOs重装后的一系列操作笔记</title>
      <link>https://wanntonn.github.io/posts/2020-05-31-reinstallsystem/</link>
      <pubDate>Sun, 31 May 2020 23:35:24 +0800</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2020-05-31-reinstallsystem/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;解除macOS 4位密码限制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;pwpolicy -clearaccountpolicies
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2020-06-15-operation-and-maintenance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2020-06-15-operation-and-maintenance/</guid>
      <description>购买服务器之后开始学习运维知识。  ssh config
 $ cd $ mkdir .ssh &amp;amp;&amp;amp; chmod 700 .ssh $ touch .ssh/authorized_keys &amp;amp;&amp;amp; chmod 600 .ssh/authorized_keys   将开发者的ssh公钥添加到authorized_keys中
 $ pbcopy &amp;lt; ~/.ssh/id_rsa.pub $ vim .ssh/authorized_keys $ ssh-copy-id -i ~/.ssh/id_rsa.pub username@server -p 22 # 将rsa.pub 上传到服务器   自定义hostname 免记ip登录
 $ vim ~/.ssh/config $ Host hostname # hostname 想要设置的别名 HostName IP User root IdentitiesOnly yes $ ssh hostname # hostname 为设置的别名   Ubuntu 安装yum</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2020-10-16-canvas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2020-10-16-canvas/</guid>
      <description>canvas 路径绘制    方法 描述     fill() 填充路径   stroke() 描边   arc() 创建圆弧   rect() 创建矩形   fillRect() 绘制矩形路径区域   strokeRect() 绘制矩形路径描边   clearRect() 在给定的矩形内清除指定的像素   arcTo() 创建两切线之间的弧/曲线   beginPath() 起始一条路径，或重置当前路径   moveTo() 把路径移动到画布中的指定点，不创建线条   lineTo() 添加一个新点，然后在画布中创建从该点到最后指定点的线条   closePath() 创建从当前点回到起始点的路径   clip() 从原始画布剪切任意形状和尺寸的区域   quadraticCurveTo() 创建二次方贝塞尔曲线   bezierCurveTo() 创建三次方贝塞尔曲线   isPointInPath() 如果指定的点位于当前路径中，则返回 true，否则返回 false    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-01-15-mysql-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-01-15-mysql-config/</guid>
      <description>MySQL workbench theme change from dark to light  defaults write com.oracle.workbench.MySQLWorkbench NSRequiresAquaSystemAppearance -bool yes
 from light to dark  defaults write com.oracle.workbench.MySQLWorkbench NSRequiresAquaSystemAppearance -bool no
 添加mysql 到bash  $ vi ~/.zshrc 输入 export PATH=${PATH}:/usr/local/mysql/bin 保存，退出 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-03-02-pycharm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-03-02-pycharm/</guid>
      <description>关于Pycharm 激活  用于无限试用Jetbrains的产品 (请勿无休止的一直试用，这并非此插件的本意)
  安装参数：
  f9fF1I/ygZI7Ff14sigGMZmZ7KJkhsM364o6exiukAqGORVXN1e4Fk4B8+hGSl5B+iLp9nIA2pSNhNGlxnDgSV3xC85CGVvWY9SWa+ECeWhJZ1+hitDPCNw5lKaRBnxIKhAfQ3aJl4S5WmrOkfKoIuz3UXVoX7hZGxofqQtzfuc 安装方法： 1.安装完Pycharm后，选择试用 2.将zip插件包拖到IDE界面安装，或者可以在Settings/Preferences -&amp;gt; Plugins -&amp;gt; 手动安装(Install Plugin From Disk...) 3.使用方法: 没打开项目： 在Welcome界面： Get Help -&amp;gt; Eval Reset。 打开了项目： Help -&amp;gt;: Eval Reset 下载地址: (好孩子看不见) 好孩子看不见</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-03-07-git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-03-07-git/</guid>
      <description>关于 Git 的一些经验收集    问题 解决方案     关于 LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443 报错 $ git config &amp;ndash;global &amp;ndash;unset http.proxy   关于 Git clone 下载慢 $ git clone https://github.com.cnpmjs.org + /xxxx/xxx.git     npm 配置淘宝镜像  npm config set registry https://registry.npm.taobao.org  npm 恢复默认   npm config set registry https://registry.npmjs.org </description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-03-15-javascript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-03-15-javascript/</guid>
      <description>JavaScript 经验之js实现无感下载  js 实现无感下载
 function download(url, filename) { return fetch(url).then(res =&amp;gt; res.blob().then(blob =&amp;gt; { let a = document.createElement(&amp;#39;a&amp;#39;); let url = window.URL.createObjectURL(blob); a.href = url; a.download = filename; a.click(); window.URL.revokeObjectURL(url); })) } </description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-03-31-fed-questions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-03-31-fed-questions/</guid>
      <description>前端 JavaScript 问答题目收录 摘录自 Github。同步更新中。  1.输出是什么？ 2021-03-31
 function sayHi() { console.log(name); console.log(age); var name = &amp;#34;Lydia&amp;#34;, let age = 21 }  A: Lydia 和 undefined B: Lydia 和 ReferenceError C: ReferenceError 和 21 D: undefined 和 ReferenceError  答案: D 在函数内部，我们首先通过 var 关键字声明了 name 变量。这意味着变量被提升了（内存空间在创建阶段就被设置好了），直到程序运行到定义变量位置之前默认值都是 undefined。因为当我们打印 name 变量时还没有执行到定义变量的位置，因此变量的值保持为 undefined。
通过 let 和 const 关键字声明的变量也会提升，但是和 var 不同，它们不会被初始化。在我们声明（初始化）之前是不能访问它们的。这个行为被称之为暂时性死区。当我们试图在声明之前访问它们时，JavaScript 将会抛出一个 ReferenceError 错误。
  2.输出是什么？2021-04-01
 for (var i = 0; i &amp;lt; 3; i++) { setTimeout(() =&amp;gt; console.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-04-01-ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-04-01-ruby/</guid>
      <description>安装Ruby环境，运行jekyll  Jekyll是一个静态网站生成器，依赖于Ruby环境
  安装RVM (安装路径：~/.rvm/scripts/rvm)  $ curl -L https://get.rvm.io | bash -s stable  载入RVM环境   $ source ~/.rvm/scripts/rvm # 查看是否安装成功 $ rvm -v  RVM 其他指令   $ rvm info # rvm 信息 $ rvm list known # rvm 已知ruby版本 $ rvm list # rvm 查询已安装的ruby $ rvm use [版本号] --default # 配置ruby使用版本 $ rvm get head # rvm 升级 $ rvm remove 版本号 # 移除ruby版本  安装Ruby  $ rvm install ruby --head # 安装最新版 # 查看是否安装成功 $ ruby -v $ gem -v # 查看默认镜像源 $ gem sources -l # 更换镜像源 $ gem source -r https://rubygems.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-06-30-interview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-06-30-interview/</guid>
      <description>前端面试被提问的问题，与考虑的点   撇开Vue，react，等框架。你认为前端应该会的技能（知识点）有哪些
  对前端工程化的理解
  能否徒手从零构建一个工程化项目
  类的使用的理解, 新建一个Person类，用构造函数定义 setName, getName, 并用User 继承Person类。
  对typescript的理解，平时是否有写过脱离框架的ts的使用
  是否封装过组件？是如何封装的
  Vue业务层的代码是如何编写的
  怎么实现跨域请求数据
  响应式和自适应
  排序算法
  设计模式，在Vue中 或在开发过程中，有哪些常用的开发模式
  你对前端工程化的理解
  为什么要前端工程化
  前端性能优化的手段有哪些
  HTTP 缓存
  Vue 数据驱动原理
  Vue 如何让视图刷新
  webpack配置中，生产环境与生产环境的不同配置
   答
       class Person { constructor(name) { this.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-07-01-reset-catalina-bgimg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-07-01-reset-catalina-bgimg/</guid>
      <description>重置macOS Catalina登录壁纸  前言：自定义Catalina登录壁纸， Big Sur 安全性加强了，还没去找替换方案。
 步骤  关闭SIP： 白苹果 - Google一下。 黑苹果：打开终端输入csrutil status 出现以下：  System Integrity Protection status: disabled.  以上说明SIP已经关闭，接着进行如下操作。  # 临时挂载 / 。让 / 是可写入状态。 $ sudo mount -uw / # 备份原来的壁纸, 这里备份在下载文件夹目录 $ sudo cp /System/Library/Desktop\ Pictures/Catalina.heic ~/Downloads/Catalina.back.heic # 将重命名后的新的登录壁纸替换原来的壁纸 $ sudo cp -f ~/Downloads/Catalina.heic /System/Library/Desktop\ Pictures/Catalina.heic # 执行如下指令后，重启就可以看到效果。 $ diskutil apfs updatePreboot / # 如果以上没有效果，但是文件却已经替换成功。 # 打开系统偏好设置 - 用户与群组 - 点击左下角的锁解除 - 在侧栏用户名点击右键打开高级选项 - 复制UUID。 # 然后用终端进入如下路径 $ cd /Library/Caches # 或者用Finder 进入 /Library/Caches # 找到Desktop Pictures文件夹，新建一个文件夹，重命名为刚才复制的UUID，如果已经存在该UUID的文件夹，看看里面是否已经存在图片，删掉文件夹下的lockscreen.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-07-02-cv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-07-02-cv/</guid>
      <description>个人简历 个人信息  汪通 / 男 / 28岁 本科 / 电子商务专业 工作年限：5年 技术博客: 地址 GitHub: 地址 期望职位： WEB前端工程师 Mail: wangtong@wanntonn.fun  工作经历 福州迈索德塔科技有限公司（2021.05 ~ 至今） 职位：前端开发工程师  参与政府、监狱项目开发维护 项目描述：负责监狱项目代码开发与维护，同时对低版本浏览器进行兼容。
 福州东西乐活科技有限公司(前：福州东西电子商务科技有限公司) (2018.08 ~ 2021.05) 职位: 前端开发工程师  参与内部ERP系统 (Vue + Vue Router + Vuex + Antdv + axios + typescript)共同开发。
 项目描述：用技术手段实现日常业务操作(SKU管理，采购，备货，财务，质检等)，减少业务流程时间，提高业务部门的效率。
 完成项目业务组件以及通用组件的封装与完善，通过配置的形式完成页面功能。减少代码冗余，避免复制与修改代码带来的隐患。 通用列表详情组件组件编写，整合列表组件与详情组件，通过传入配置，实现少代码就能快速完成页面渲染。 主菜单列表组件，实现展示旧版与新版路由，添加input输入关键字，即时过滤菜单，清空后显示所有菜单选项, 实现快速筛选。 main.js 添加路由拦截逻辑，实现按需拦截与取消请求的功能。 引入typescript，规范代码风格，减少写法上错误带来的bug。   独立开发基于内部ERP系统的内部工单系统 (Vue + Vue Router + Vuex + Antdv + axios + typescript)</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-07-02-start-react/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-07-02-start-react/</guid>
      <description>React 学习之路 记录本菜鸡的react学习历程   生成react-app 模板  $ npx create-react-app app-name  react中 { 开头就会被识别为 JavaScript， &amp;lt; 开头就会被识别为HTML   vscode react 添加emmet支持  # settings.json &amp;quot;emmet.includeLanguages&amp;quot;: { &amp;quot;javascript&amp;quot;: &amp;quot;javascriptreact&amp;quot; }  重写react-app 配置  // 1. 下载 react-app-rewired 和 customize-cra $ yarn add customize-cra react-app-rewired // 2. 配置package.json scripts: { &amp;#34;start&amp;#34;: &amp;#34;react-app-rewired start&amp;#34; // 在start 前增加react-app-rewired } // 3.在项目根目录增加 config-overrides.js // config-overrides.js const { override, addDecoratorsLegacy, disableEsLint, addWebpackAlias, addLessLoader, addWebpackPlugin } = require(&amp;#34;customize-cra&amp;#34;); const path = require(&amp;#34;path&amp;#34;); module.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wanntonn.github.io/posts/2021-07-10.nas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wanntonn.github.io/posts/2021-07-10.nas/</guid>
      <description>NAS 折腾日记 前言：黑群晖起飞。以下记录为踩坑经验，仅供参考 参考： 不到千元！手把手教您组装一台家用NAS J3455黑群晖6.1.7搭建全过程 跟着流程走，就可以顺利完成安装  踩坑的点
      问题 解决方案     由于DiskGenius版本为4.7，导致后来无法识别出NAS启动分区 要升级到5.0+ 版本方可识别   刷入DS3617_6.1.img 后。从路由器的LAN口直接连接到NAS，NAS的宽带网口亮红灯。 再拿一个U盘 写入带有线网卡驱动的PE，进入到PE后，宽带口亮绿灯(就是玄学)       如何完善NAS
  待续。  </description>
    </item>
    
  </channel>
</rss>
