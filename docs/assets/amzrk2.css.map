{
	"version": 3,
	"file": "amzrk2.css",
	"sourceRoot": "/Users/wanntonn/zones/wanntonn.github.io",
	"sources": [
		"assets/scss/index.scss",
		"assets/scss/framework/normalize.scss",
		"node_modules/normalize.css/normalize.css",
		"assets/scss/support/colors.scss",
		"assets/scss/support/variables.scss",
		"assets/scss/support/images.scss",
		"assets/scss/support/scrollbar.scss",
		"assets/svg/iconfont.css",
		"assets/scss/framework/bulma.scss",
		"node_modules/bulma/sass/utilities/_all.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/utilities/mixins.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/utilities/controls.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/utilities/extends.sass",
		"node_modules/bulma/sass/utilities/mixins.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/base/_all.sass",
		"node_modules/bulma/sass/base/minireset.sass",
		"node_modules/bulma/sass/base/generic.sass",
		"node_modules/bulma/sass/utilities/mixins.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/base/animations.sass",
		"node_modules/bulma/sass/elements/container.sass",
		"node_modules/bulma/sass/utilities/mixins.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/grid/columns.sass",
		"node_modules/bulma/sass/utilities/mixins.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/elements/content.sass",
		"node_modules/bulma/sass/utilities/mixins.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/form/shared.sass",
		"node_modules/bulma/sass/utilities/controls.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/utilities/mixins.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"node_modules/bulma/sass/form/input-textarea.sass",
		"node_modules/bulma/sass/elements/table.sass",
		"node_modules/bulma/sass/utilities/mixins.sass",
		"node_modules/bulma/sass/utilities/derived-variables.sass",
		"node_modules/bulma/sass/utilities/initial-variables.sass",
		"node_modules/bulma/sass/utilities/functions.sass",
		"assets/scss/framework/prism.scss",
		"assets/scss/reset.scss",
		"assets/scss/global.scss",
		"assets/scss/partials/navbar.scss",
		"assets/scss/partials/card.scss",
		"assets/scss/partials/footer.scss",
		"assets/scss/partials/main.scss",
		"assets/scss/partials/list.scss",
		"assets/scss/partials/single.scss",
		"assets/scss/partials/meta.scss",
		"assets/scss/partials/pagination.scss",
		"assets/scss/partials/search.scss",
		"assets/scss/partials/mobile.scss"
	],
	"sourcesContent": [
		"/*! amzrk2-ng | DSRKafuU <amzrk2.cc> | Copyright (c) Apache-2.0 License */\n\n// reset\n@import './framework/normalize';\n\n@import './support/colors';\n@import './support/variables';\n@import './support/images';\n@import './support/scrollbar';\n\n// icons\n@import '../svg/iconfont';\n\n// bulma\n@import './framework/bulma';\n@import './framework/prism';\n\n// reset\n@import './reset';\n\n// global\n@import './global';\n\n// partials\n@import './partials/navbar';\n@import './partials/card';\n@import './partials/footer';\n@import './partials/main';\n@import './partials/list';\n@import './partials/single';\n@import './partials/meta';\n@import './partials/pagination';\n@import './partials/search';\n@import './partials/mobile';\n",
		"@import 'normalize.css/normalize';\n",
		"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n",
		"$amzrk2-colors-light: (\n  'body': #f2f5f8,\n  'bg': #fffffd,\n  'hover': #f3f5fa,\n  'wrapper': #f5f5f5,\n  'font': #3f4551,\n  'primary': #8aa2d3,\n  'secondary': #8b81c3,\n);\n@mixin light {\n  @each $key, $value in $amzrk2-colors-light {\n    --color-#{$key}: #{$value};\n  }\n  --shadow: 0 0.25rem 1rem rgba(48, 55, 66, 0.06);\n}\n\n$amzrk2-colors-dark: (\n  'body': #2f3136,\n  'bg': #4d5158,\n  'hover': #41454b,\n  'wrapper': #34373d,\n  'font': rgba(255, 255, 255, 0.75),\n  'primary': #8aa2d3,\n  'secondary': #bab1df,\n);\n@mixin dark {\n  @each $key, $value in $amzrk2-colors-dark {\n    --color-#{$key}: #{$value};\n  }\n  --shadow: none;\n  img {\n    filter: brightness(85%);\n  }\n}\n\nbody[data-theme='auto'] {\n  @include light();\n\n  @media (prefers-color-scheme: dark) {\n    @include dark();\n  }\n}\nbody[data-theme='light'] {\n  @include light();\n}\nbody[data-theme='dark'] {\n  @include dark();\n}\n",
		"$amzrk2-font-family-base: -apple-system, BlinkMacSystemFont, 'SF Pro Text', 'Segoe UI', 'Arial',\n  'Helvetica Neue', 'Helvetica', 'PingFang SC', 'Hiragino Sans GB', 'Source Han Sans CN',\n  'Source Han Sans SC', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif;\n$amzrk2-font-family-mono: 'Cascadia Code', 'SF Mono', 'Fira Code', 'Consolas', -apple-system,\n  BlinkMacSystemFont, 'SF Pro Text', 'Segoe UI', 'Arial', 'Helvetica Neue', 'Helvetica',\n  'PingFang SC', 'Hiragino Sans GB', 'Source Han Sans CN', 'Source Han Sans SC', 'Microsoft YaHei',\n  'WenQuanYi Micro Hei', monospace;\n\n$amzrk2-font-size-base: 16px;\n\n$amzrk2-font-size-xs: 0.75rem;\n$amzrk2-font-size-sm: 0.875rem;\n$amzrk2-font-size-md: 1.125rem;\n$amzrk2-font-size-lg: 1.25rem;\n$amzrk2-font-size-xl: 1.375rem;\n\n$amzrk2-space-base: 1.5rem;\n$amzrk2-space-sm: 1rem;\n\n$amzrk2-navbar-height: 3.25rem;\n$amzrk2-navbar-height-sm: 2.5rem;\n\n$amzrk2-radius: 3px;\n\n$amzrk2-divider: 0.1875rem solid var(--color-wrapper);\n\n$amzrk2-toc-height: 512px;\n",
		".image-wrapper {\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 0;\n  overflow: hidden;\n  background-color: var(--color-wrapper);\n\n  img {\n    display: block;\n    width: 100%;\n  }\n}\n\n// common aspect ratios\n// 32x9  -  28.125%\n// 21x9  -  42.85714286%\n// 18x9  -  50%\n// 16x9  -  56.25%\n// 16x10 -  62.5%\n// 3x2   -  66.66666667%\n// 4x3   -  75%\n// 1x1   -  100%\n$ratios: (\n  '40x9': 9 / 40 * 100%,\n  '32x9': 9 / 32 * 100%,\n  '21x9': 9 / 21 * 100%,\n  '18x9': 9 / 18 * 100%,\n  '16x9': 9 / 16 * 100%,\n  '16x10': 10 / 16 * 100%,\n  '3x2': 2 / 3 * 100%,\n  '4x3': 3 / 4 * 100%,\n  '1x1': 100%,\n  '3x4': 4 / 3 * 100%,\n  '2x3': 3 / 2 * 100%,\n  '10x16': 16 / 10 * 100%,\n  '9x16': 16 / 9 * 100%,\n  '9x18': 18 / 9 * 100%,\n  '9x21': 21 / 9 * 100%,\n  '9x32': 32 / 9 * 100%,\n);\n@each $key, $value in $ratios {\n  .ratio-#{$key} {\n    padding-bottom: $value;\n  }\n}\n",
		"/* custom scrollbar */\n\n@mixin customScrollbar($direction: 'all') {\n  // firefox\n  scrollbar-width: thin;\n\n  // webkit\n  @media (pointer: fine) {\n    &::-webkit-scrollbar {\n      background-color: var(--color-scroll-bg);\n      @if $direction == 'x' {\n        height: 0.5rem;\n      } @else if $direction == 'y' {\n        width: 0.5rem;\n      } @else {\n        height: 0.5rem;\n        width: 0.5rem;\n      }\n    }\n    &::-webkit-scrollbar-thumb {\n      background-color: var(--color-scroll-thumb);\n      @if $direction == 'x' {\n        min-width: 3rem;\n      } @else if $direction == 'y' {\n        min-height: 3rem;\n      } @else {\n        min-height: 3rem;\n        min-width: 3rem;\n      }\n      &:hover {\n        background-color: var(--color-scroll-hover);\n      }\n      &:active {\n        background-color: var(--color-scroll-focus);\n      }\n    }\n    &::-webkit-scrollbar-button {\n      width: 0;\n      height: 0;\n    }\n  }\n}\n",
		".icon {\n  width: 1em;\n  height: 1em;\n  vertical-align: -0.1em;\n  fill: currentColor;\n  overflow: hidden;\n}\n\n@keyframes spinner {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.icon.spin {\n  animation: spinner 1s infinite linear;\n}\n",
		"/* initial */\n$family-sans-serif: $amzrk2-font-family-base;\n$family-monospace: $amzrk2-font-family-mono;\n$block-spacing: $amzrk2-space-base;\n\n/* derived */\n$text: var(--color-font);\n\n/* generic */\n$body-size: $amzrk2-font-size-base;\n\n/* responsive */\n$tablet: 769px;\n$desktop: 1080px;\n$widescreen-enabled: false;\n$fullhd-enabled: false;\n\n/* markdown */\n$text-strong: var(--color-primary);\n$content-blockquote-background-color: transparent;\n$content-blockquote-padding: 0 $amzrk2-space-sm;\n$content-pre-padding: $amzrk2-space-sm;\n$table-color: var(--color-font);\n\n/* search */\n$input-color: var(--color-font);\n$input-background-color: var(--color-wrapper);\n$input-border-color: transparent;\n$input-hover-color: var(--color-wrapper);\n$input-hover-border-color: transparent;\n$input-focus-color: var(--color-wrapper);\n$input-focus-border-color: var(--color-primary);\n$input-radius: 3px;\n\n/* components */\n@import 'bulma/sass/utilities/_all';\n@import 'bulma/sass/base/_all';\n@import 'bulma/sass/elements/container';\n@import 'bulma/sass/grid/columns';\n@import 'bulma/sass/elements/content';\n@import 'bulma/sass/form/shared';\n@import 'bulma/sass/form/input-textarea';\n@import 'bulma/sass/elements/table';\n",
		"/* Bulma Utilities */\n@charset \"utf-8\";\n\n@import \"initial-variables\";\n@import \"functions\";\n@import \"derived-variables\";\n@import \"mixins\";\n@import \"controls\";\n@import \"extends\";\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"@import \"derived-variables\";\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \" \";\n    display: table; } }\n\n@mixin center($width, $height: 0) {\n  position: absolute;\n  @if $height != 0 {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$height} * 0.5)); }\n  @else {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$width} * 0.5)); } }\n\n@mixin fa($size, $dimensions) {\n  display: inline-block;\n  font-size: $size;\n  height: $dimensions;\n  line-height: $dimensions;\n  text-align: center;\n  vertical-align: top;\n  width: $dimensions; }\n\n@mixin hamburger($dimensions) {\n  cursor: pointer;\n  display: block;\n  height: $dimensions;\n  position: relative;\n  width: $dimensions;\n  span {\n    background-color: currentColor;\n    display: block;\n    height: 1px;\n    left: calc(50% - 8px);\n    position: absolute;\n    transform-origin: center;\n    transition-duration: $speed;\n    transition-property: background-color, opacity, transform;\n    transition-timing-function: $easing;\n    width: 16px;\n    &:nth-child(1) {\n      top: calc(50% - 6px); }\n    &:nth-child(2) {\n      top: calc(50% - 1px); }\n    &:nth-child(3) {\n      top: calc(50% + 4px); } }\n  &:hover {\n    background-color: bulmaRgba(black, 0.05); }\n  // Modifers\n  &.is-active {\n    span {\n      &:nth-child(1) {\n        transform: translateY(5px) rotate(45deg); }\n      &:nth-child(2) {\n        opacity: 0; }\n      &:nth-child(3) {\n        transform: translateY(-5px) rotate(-45deg); } } } }\n\n@mixin overflow-touch {\n  -webkit-overflow-scrolling: touch; }\n\n@mixin placeholder {\n  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input';\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content; } } }\n\n@mixin reset {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background: none;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: 1em;\n  margin: 0;\n  padding: 0; }\n\n// Responsiveness\n\n@mixin from($device) {\n  @media screen and (min-width: $device) {\n    @content; } }\n\n@mixin until($device) {\n  @media screen and (max-width: $device - 1px) {\n    @content; } }\n\n@mixin mobile {\n  @media screen and (max-width: $tablet - 1px) {\n    @content; } }\n\n@mixin tablet {\n  @media screen and (min-width: $tablet), print {\n    @content; } }\n\n@mixin tablet-only {\n  @media screen and (min-width: $tablet) and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin touch {\n  @media screen and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin desktop {\n  @media screen and (min-width: $desktop) {\n    @content; } }\n\n@mixin desktop-only {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $desktop) and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin until-widescreen {\n  @if $widescreen-enabled {\n    @media screen and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin widescreen {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $widescreen) {\n      @content; } } }\n\n@mixin widescreen-only {\n  @if $widescreen-enabled and $fullhd-enabled {\n    @media screen and (min-width: $widescreen) and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin until-fullhd {\n  @if $fullhd-enabled {\n    @media screen and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin fullhd {\n  @if $fullhd-enabled {\n    @media screen and (min-width: $fullhd) {\n      @content; } } }\n\n@mixin ltr {\n  @if not $rtl {\n    @content; } }\n\n@mixin rtl {\n  @if $rtl {\n    @content; } }\n\n@mixin ltr-property($property, $spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$property}-#{$opposite}: $spacing; }\n  @else {\n    #{$property}-#{$normal}: $spacing; } }\n\n@mixin ltr-position($spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$opposite}: $spacing; }\n  @else {\n    #{$normal}: $spacing; } }\n\n// Placeholders\n\n@mixin unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n@mixin arrow($color: transparent) {\n  border: 3px solid $color;\n  border-radius: 2px;\n  border-right: 0;\n  border-top: 0;\n  content: \" \";\n  display: block;\n  height: 0.625em;\n  margin-top: -0.4375em;\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  transform: rotate(-45deg);\n  transform-origin: center;\n  width: 0.625em; }\n\n@mixin block($spacing: $block-spacing) {\n  &:not(:last-child) {\n    margin-bottom: $spacing; } }\n\n@mixin delete {\n  @include unselectable;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  background-color: bulmaRgba($scheme-invert, 0.2);\n  border: none;\n  border-radius: $radius-rounded;\n  cursor: pointer;\n  pointer-events: auto;\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  font-size: 0;\n  height: 20px;\n  max-height: 20px;\n  max-width: 20px;\n  min-height: 20px;\n  min-width: 20px;\n  outline: none;\n  position: relative;\n  vertical-align: top;\n  width: 20px;\n  &::before,\n  &::after {\n    background-color: $scheme-main;\n    content: \"\";\n    display: block;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n    transform-origin: center center; }\n  &::before {\n    height: 2px;\n    width: 50%; }\n  &::after {\n    height: 50%;\n    width: 2px; }\n  &:hover,\n  &:focus {\n    background-color: bulmaRgba($scheme-invert, 0.3); }\n  &:active {\n    background-color: bulmaRgba($scheme-invert, 0.4); }\n  // Sizes\n  &.is-small {\n    height: 16px;\n    max-height: 16px;\n    max-width: 16px;\n    min-height: 16px;\n    min-width: 16px;\n    width: 16px; }\n  &.is-medium {\n    height: 24px;\n    max-height: 24px;\n    max-width: 24px;\n    min-height: 24px;\n    min-width: 24px;\n    width: 24px; }\n  &.is-large {\n    height: 32px;\n    max-height: 32px;\n    max-width: 32px;\n    min-height: 32px;\n    min-width: 32px;\n    width: 32px; } }\n\n@mixin loader {\n  animation: spinAround 500ms infinite linear;\n  border: 2px solid $grey-lighter;\n  border-radius: $radius-rounded;\n  border-right-color: transparent;\n  border-top-color: transparent;\n  content: \"\";\n  display: block;\n  height: 1em;\n  position: relative;\n  width: 1em; }\n\n@mixin overlay($offset: 0) {\n  bottom: $offset;\n  left: $offset;\n  position: absolute;\n  right: $offset;\n  top: $offset; }\n\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"@import \"derived-variables\";\n\n$control-radius: $radius !default;\n$control-radius-small: $radius-small !default;\n\n$control-border-width: 1px !default;\n\n$control-height: 2.5em !default;\n$control-line-height: 1.5 !default;\n\n$control-padding-vertical: calc(0.5em - #{$control-border-width}) !default;\n$control-padding-horizontal: calc(0.75em - #{$control-border-width}) !default;\n\n@mixin control {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  align-items: center;\n  border: $control-border-width solid transparent;\n  border-radius: $control-radius;\n  box-shadow: none;\n  display: inline-flex;\n  font-size: $size-normal;\n  height: $control-height;\n  justify-content: flex-start;\n  line-height: $control-line-height;\n  padding-bottom: $control-padding-vertical;\n  padding-left: $control-padding-horizontal;\n  padding-right: $control-padding-horizontal;\n  padding-top: $control-padding-vertical;\n  position: relative;\n  vertical-align: top;\n  // States\n  &:focus,\n  &.is-focused,\n  &:active,\n  &.is-active {\n    outline: none; }\n  &[disabled],\n  fieldset[disabled] & {\n    cursor: not-allowed; } }\n\n// The controls sizes use mixins so they can be used at different breakpoints\n@mixin control-small {\n  border-radius: $control-radius-small;\n  font-size: $size-small; }\n@mixin control-medium {\n  font-size: $size-medium; }\n@mixin control-large {\n  font-size: $size-large; }\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"@import \"mixins\";\n\n%control {\n  @include control; }\n\n%unselectable {\n  @include unselectable; }\n\n%arrow {\n  @include arrow; }\n\n%block {\n  @include block; }\n\n%delete {\n  @include delete; }\n\n%loader {\n  @include loader; }\n\n%overlay {\n  @include overlay; }\n\n%reset {\n  @include reset; }\n",
		"@import \"derived-variables\";\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \" \";\n    display: table; } }\n\n@mixin center($width, $height: 0) {\n  position: absolute;\n  @if $height != 0 {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$height} * 0.5)); }\n  @else {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$width} * 0.5)); } }\n\n@mixin fa($size, $dimensions) {\n  display: inline-block;\n  font-size: $size;\n  height: $dimensions;\n  line-height: $dimensions;\n  text-align: center;\n  vertical-align: top;\n  width: $dimensions; }\n\n@mixin hamburger($dimensions) {\n  cursor: pointer;\n  display: block;\n  height: $dimensions;\n  position: relative;\n  width: $dimensions;\n  span {\n    background-color: currentColor;\n    display: block;\n    height: 1px;\n    left: calc(50% - 8px);\n    position: absolute;\n    transform-origin: center;\n    transition-duration: $speed;\n    transition-property: background-color, opacity, transform;\n    transition-timing-function: $easing;\n    width: 16px;\n    &:nth-child(1) {\n      top: calc(50% - 6px); }\n    &:nth-child(2) {\n      top: calc(50% - 1px); }\n    &:nth-child(3) {\n      top: calc(50% + 4px); } }\n  &:hover {\n    background-color: bulmaRgba(black, 0.05); }\n  // Modifers\n  &.is-active {\n    span {\n      &:nth-child(1) {\n        transform: translateY(5px) rotate(45deg); }\n      &:nth-child(2) {\n        opacity: 0; }\n      &:nth-child(3) {\n        transform: translateY(-5px) rotate(-45deg); } } } }\n\n@mixin overflow-touch {\n  -webkit-overflow-scrolling: touch; }\n\n@mixin placeholder {\n  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input';\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content; } } }\n\n@mixin reset {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background: none;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: 1em;\n  margin: 0;\n  padding: 0; }\n\n// Responsiveness\n\n@mixin from($device) {\n  @media screen and (min-width: $device) {\n    @content; } }\n\n@mixin until($device) {\n  @media screen and (max-width: $device - 1px) {\n    @content; } }\n\n@mixin mobile {\n  @media screen and (max-width: $tablet - 1px) {\n    @content; } }\n\n@mixin tablet {\n  @media screen and (min-width: $tablet), print {\n    @content; } }\n\n@mixin tablet-only {\n  @media screen and (min-width: $tablet) and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin touch {\n  @media screen and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin desktop {\n  @media screen and (min-width: $desktop) {\n    @content; } }\n\n@mixin desktop-only {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $desktop) and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin until-widescreen {\n  @if $widescreen-enabled {\n    @media screen and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin widescreen {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $widescreen) {\n      @content; } } }\n\n@mixin widescreen-only {\n  @if $widescreen-enabled and $fullhd-enabled {\n    @media screen and (min-width: $widescreen) and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin until-fullhd {\n  @if $fullhd-enabled {\n    @media screen and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin fullhd {\n  @if $fullhd-enabled {\n    @media screen and (min-width: $fullhd) {\n      @content; } } }\n\n@mixin ltr {\n  @if not $rtl {\n    @content; } }\n\n@mixin rtl {\n  @if $rtl {\n    @content; } }\n\n@mixin ltr-property($property, $spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$property}-#{$opposite}: $spacing; }\n  @else {\n    #{$property}-#{$normal}: $spacing; } }\n\n@mixin ltr-position($spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$opposite}: $spacing; }\n  @else {\n    #{$normal}: $spacing; } }\n\n// Placeholders\n\n@mixin unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n@mixin arrow($color: transparent) {\n  border: 3px solid $color;\n  border-radius: 2px;\n  border-right: 0;\n  border-top: 0;\n  content: \" \";\n  display: block;\n  height: 0.625em;\n  margin-top: -0.4375em;\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  transform: rotate(-45deg);\n  transform-origin: center;\n  width: 0.625em; }\n\n@mixin block($spacing: $block-spacing) {\n  &:not(:last-child) {\n    margin-bottom: $spacing; } }\n\n@mixin delete {\n  @include unselectable;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  background-color: bulmaRgba($scheme-invert, 0.2);\n  border: none;\n  border-radius: $radius-rounded;\n  cursor: pointer;\n  pointer-events: auto;\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  font-size: 0;\n  height: 20px;\n  max-height: 20px;\n  max-width: 20px;\n  min-height: 20px;\n  min-width: 20px;\n  outline: none;\n  position: relative;\n  vertical-align: top;\n  width: 20px;\n  &::before,\n  &::after {\n    background-color: $scheme-main;\n    content: \"\";\n    display: block;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n    transform-origin: center center; }\n  &::before {\n    height: 2px;\n    width: 50%; }\n  &::after {\n    height: 50%;\n    width: 2px; }\n  &:hover,\n  &:focus {\n    background-color: bulmaRgba($scheme-invert, 0.3); }\n  &:active {\n    background-color: bulmaRgba($scheme-invert, 0.4); }\n  // Sizes\n  &.is-small {\n    height: 16px;\n    max-height: 16px;\n    max-width: 16px;\n    min-height: 16px;\n    min-width: 16px;\n    width: 16px; }\n  &.is-medium {\n    height: 24px;\n    max-height: 24px;\n    max-width: 24px;\n    min-height: 24px;\n    min-width: 24px;\n    width: 24px; }\n  &.is-large {\n    height: 32px;\n    max-height: 32px;\n    max-width: 32px;\n    min-height: 32px;\n    min-width: 32px;\n    width: 32px; } }\n\n@mixin loader {\n  animation: spinAround 500ms infinite linear;\n  border: 2px solid $grey-lighter;\n  border-radius: $radius-rounded;\n  border-right-color: transparent;\n  border-top-color: transparent;\n  content: \"\";\n  display: block;\n  height: 1em;\n  position: relative;\n  width: 1em; }\n\n@mixin overlay($offset: 0) {\n  bottom: $offset;\n  left: $offset;\n  position: absolute;\n  right: $offset;\n  top: $offset; }\n\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"/* Bulma Base */\n@charset \"utf-8\";\n\n@import \"minireset\";\n@import \"generic\";\n@import \"animations\";\n",
		"/*! minireset.css v0.0.6 | MIT License | github.com/jgthms/minireset.css */\n// Blocks\nhtml,\nbody,\np,\nol,\nul,\nli,\ndl,\ndt,\ndd,\nblockquote,\nfigure,\nfieldset,\nlegend,\ntextarea,\npre,\niframe,\nhr,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n  padding: 0; }\n\n// Headings\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: 100%;\n  font-weight: normal; }\n\n// List\nul {\n  list-style: none; }\n\n// Form\nbutton,\ninput,\nselect,\ntextarea {\n  margin: 0; }\n\n// Box sizing\nhtml {\n  box-sizing: border-box; }\n\n* {\n  &,\n  &::before,\n  &::after {\n    box-sizing: inherit; } }\n\n// Media\nimg,\nvideo {\n  height: auto;\n  max-width: 100%; }\n\n// Iframe\niframe {\n  border: 0; }\n\n// Table\ntable {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\ntd,\nth {\n  padding: 0;\n  &:not([align]) {\n    text-align: inherit; } }\n",
		"@import \"../utilities/mixins\";\n\n$body-background-color: $scheme-main !default;\n$body-size: 16px !default;\n$body-min-width: 300px !default;\n$body-rendering: optimizeLegibility !default;\n$body-family: $family-primary !default;\n$body-overflow-x: hidden !default;\n$body-overflow-y: scroll !default;\n\n$body-color: $text !default;\n$body-font-size: 1em !default;\n$body-weight: $weight-normal !default;\n$body-line-height: 1.5 !default;\n\n$code-family: $family-code !default;\n$code-padding: 0.25em 0.5em 0.25em !default;\n$code-weight: normal !default;\n$code-size: 0.875em !default;\n\n$small-font-size: 0.875em !default;\n\n$hr-background-color: $background !default;\n$hr-height: 2px !default;\n$hr-margin: 1.5rem 0 !default;\n\n$strong-color: $text-strong !default;\n$strong-weight: $weight-bold !default;\n\n$pre-font-size: 0.875em !default;\n$pre-padding: 1.25rem 1.5rem !default;\n$pre-code-font-size: 1em !default;\n\nhtml {\n  background-color: $body-background-color;\n  font-size: $body-size;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  min-width: $body-min-width;\n  overflow-x: $body-overflow-x;\n  overflow-y: $body-overflow-y;\n  text-rendering: $body-rendering;\n  text-size-adjust: 100%; }\n\narticle,\naside,\nfigure,\nfooter,\nheader,\nhgroup,\nsection {\n  display: block; }\n\nbody,\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: $body-family; }\n\ncode,\npre {\n  -moz-osx-font-smoothing: auto;\n  -webkit-font-smoothing: auto;\n  font-family: $code-family; }\n\nbody {\n  color: $body-color;\n  font-size: $body-font-size;\n  font-weight: $body-weight;\n  line-height: $body-line-height; }\n\n// Inline\n\na {\n  color: $link;\n  cursor: pointer;\n  text-decoration: none;\n  strong {\n    color: currentColor; }\n  &:hover {\n    color: $link-hover; } }\n\ncode {\n  background-color: $code-background;\n  color: $code;\n  font-size: $code-size;\n  font-weight: $code-weight;\n  padding: $code-padding; }\n\nhr {\n  background-color: $hr-background-color;\n  border: none;\n  display: block;\n  height: $hr-height;\n  margin: $hr-margin; }\n\nimg {\n  height: auto;\n  max-width: 100%; }\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  vertical-align: baseline; }\n\nsmall {\n  font-size: $small-font-size; }\n\nspan {\n  font-style: inherit;\n  font-weight: inherit; }\n\nstrong {\n  color: $strong-color;\n  font-weight: $strong-weight; }\n\n// Block\n\nfieldset {\n  border: none; }\n\npre {\n  @include overflow-touch;\n  background-color: $pre-background;\n  color: $pre;\n  font-size: $pre-font-size;\n  overflow-x: auto;\n  padding: $pre-padding;\n  white-space: pre;\n  word-wrap: normal;\n  code {\n    background-color: transparent;\n    color: currentColor;\n    font-size: $pre-code-font-size;\n    padding: 0; } }\n\ntable {\n  td,\n  th {\n    vertical-align: top;\n    &:not([align]) {\n      text-align: inherit; } }\n  th {\n    color: $text-strong; } }\n",
		"@import \"derived-variables\";\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \" \";\n    display: table; } }\n\n@mixin center($width, $height: 0) {\n  position: absolute;\n  @if $height != 0 {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$height} * 0.5)); }\n  @else {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$width} * 0.5)); } }\n\n@mixin fa($size, $dimensions) {\n  display: inline-block;\n  font-size: $size;\n  height: $dimensions;\n  line-height: $dimensions;\n  text-align: center;\n  vertical-align: top;\n  width: $dimensions; }\n\n@mixin hamburger($dimensions) {\n  cursor: pointer;\n  display: block;\n  height: $dimensions;\n  position: relative;\n  width: $dimensions;\n  span {\n    background-color: currentColor;\n    display: block;\n    height: 1px;\n    left: calc(50% - 8px);\n    position: absolute;\n    transform-origin: center;\n    transition-duration: $speed;\n    transition-property: background-color, opacity, transform;\n    transition-timing-function: $easing;\n    width: 16px;\n    &:nth-child(1) {\n      top: calc(50% - 6px); }\n    &:nth-child(2) {\n      top: calc(50% - 1px); }\n    &:nth-child(3) {\n      top: calc(50% + 4px); } }\n  &:hover {\n    background-color: bulmaRgba(black, 0.05); }\n  // Modifers\n  &.is-active {\n    span {\n      &:nth-child(1) {\n        transform: translateY(5px) rotate(45deg); }\n      &:nth-child(2) {\n        opacity: 0; }\n      &:nth-child(3) {\n        transform: translateY(-5px) rotate(-45deg); } } } }\n\n@mixin overflow-touch {\n  -webkit-overflow-scrolling: touch; }\n\n@mixin placeholder {\n  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input';\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content; } } }\n\n@mixin reset {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background: none;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: 1em;\n  margin: 0;\n  padding: 0; }\n\n// Responsiveness\n\n@mixin from($device) {\n  @media screen and (min-width: $device) {\n    @content; } }\n\n@mixin until($device) {\n  @media screen and (max-width: $device - 1px) {\n    @content; } }\n\n@mixin mobile {\n  @media screen and (max-width: $tablet - 1px) {\n    @content; } }\n\n@mixin tablet {\n  @media screen and (min-width: $tablet), print {\n    @content; } }\n\n@mixin tablet-only {\n  @media screen and (min-width: $tablet) and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin touch {\n  @media screen and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin desktop {\n  @media screen and (min-width: $desktop) {\n    @content; } }\n\n@mixin desktop-only {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $desktop) and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin until-widescreen {\n  @if $widescreen-enabled {\n    @media screen and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin widescreen {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $widescreen) {\n      @content; } } }\n\n@mixin widescreen-only {\n  @if $widescreen-enabled and $fullhd-enabled {\n    @media screen and (min-width: $widescreen) and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin until-fullhd {\n  @if $fullhd-enabled {\n    @media screen and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin fullhd {\n  @if $fullhd-enabled {\n    @media screen and (min-width: $fullhd) {\n      @content; } } }\n\n@mixin ltr {\n  @if not $rtl {\n    @content; } }\n\n@mixin rtl {\n  @if $rtl {\n    @content; } }\n\n@mixin ltr-property($property, $spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$property}-#{$opposite}: $spacing; }\n  @else {\n    #{$property}-#{$normal}: $spacing; } }\n\n@mixin ltr-position($spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$opposite}: $spacing; }\n  @else {\n    #{$normal}: $spacing; } }\n\n// Placeholders\n\n@mixin unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n@mixin arrow($color: transparent) {\n  border: 3px solid $color;\n  border-radius: 2px;\n  border-right: 0;\n  border-top: 0;\n  content: \" \";\n  display: block;\n  height: 0.625em;\n  margin-top: -0.4375em;\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  transform: rotate(-45deg);\n  transform-origin: center;\n  width: 0.625em; }\n\n@mixin block($spacing: $block-spacing) {\n  &:not(:last-child) {\n    margin-bottom: $spacing; } }\n\n@mixin delete {\n  @include unselectable;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  background-color: bulmaRgba($scheme-invert, 0.2);\n  border: none;\n  border-radius: $radius-rounded;\n  cursor: pointer;\n  pointer-events: auto;\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  font-size: 0;\n  height: 20px;\n  max-height: 20px;\n  max-width: 20px;\n  min-height: 20px;\n  min-width: 20px;\n  outline: none;\n  position: relative;\n  vertical-align: top;\n  width: 20px;\n  &::before,\n  &::after {\n    background-color: $scheme-main;\n    content: \"\";\n    display: block;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n    transform-origin: center center; }\n  &::before {\n    height: 2px;\n    width: 50%; }\n  &::after {\n    height: 50%;\n    width: 2px; }\n  &:hover,\n  &:focus {\n    background-color: bulmaRgba($scheme-invert, 0.3); }\n  &:active {\n    background-color: bulmaRgba($scheme-invert, 0.4); }\n  // Sizes\n  &.is-small {\n    height: 16px;\n    max-height: 16px;\n    max-width: 16px;\n    min-height: 16px;\n    min-width: 16px;\n    width: 16px; }\n  &.is-medium {\n    height: 24px;\n    max-height: 24px;\n    max-width: 24px;\n    min-height: 24px;\n    min-width: 24px;\n    width: 24px; }\n  &.is-large {\n    height: 32px;\n    max-height: 32px;\n    max-width: 32px;\n    min-height: 32px;\n    min-width: 32px;\n    width: 32px; } }\n\n@mixin loader {\n  animation: spinAround 500ms infinite linear;\n  border: 2px solid $grey-lighter;\n  border-radius: $radius-rounded;\n  border-right-color: transparent;\n  border-top-color: transparent;\n  content: \"\";\n  display: block;\n  height: 1em;\n  position: relative;\n  width: 1em; }\n\n@mixin overlay($offset: 0) {\n  bottom: $offset;\n  left: $offset;\n  position: absolute;\n  right: $offset;\n  top: $offset; }\n\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"@keyframes spinAround {\n  from {\n    transform: rotate(0deg); }\n  to {\n    transform: rotate(359deg); } }\n",
		"@import \"../utilities/mixins\";\n\n$container-offset: (2 * $gap) !default;\n$container-max-width: $fullhd !default;\n\n.container {\n  flex-grow: 1;\n  margin: 0 auto;\n  position: relative;\n  width: auto;\n  &.is-fluid {\n    max-width: none !important;\n    padding-left: $gap;\n    padding-right: $gap;\n    width: 100%; }\n  @include desktop {\n    max-width: $desktop - $container-offset; }\n  @include until-widescreen {\n    &.is-widescreen:not(.is-max-desktop) {\n      max-width: min($widescreen, $container-max-width) - $container-offset; } }\n  @include until-fullhd {\n    &.is-fullhd:not(.is-max-desktop):not(.is-max-widescreen) {\n      max-width: min($fullhd, $container-max-width) - $container-offset; } }\n  @include widescreen {\n    &:not(.is-max-desktop) {\n      max-width: min($widescreen, $container-max-width) - $container-offset; } }\n  @include fullhd {\n    &:not(.is-max-desktop):not(.is-max-widescreen) {\n      max-width: min($fullhd, $container-max-width) - $container-offset; } } }\n",
		"@import \"derived-variables\";\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \" \";\n    display: table; } }\n\n@mixin center($width, $height: 0) {\n  position: absolute;\n  @if $height != 0 {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$height} * 0.5)); }\n  @else {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$width} * 0.5)); } }\n\n@mixin fa($size, $dimensions) {\n  display: inline-block;\n  font-size: $size;\n  height: $dimensions;\n  line-height: $dimensions;\n  text-align: center;\n  vertical-align: top;\n  width: $dimensions; }\n\n@mixin hamburger($dimensions) {\n  cursor: pointer;\n  display: block;\n  height: $dimensions;\n  position: relative;\n  width: $dimensions;\n  span {\n    background-color: currentColor;\n    display: block;\n    height: 1px;\n    left: calc(50% - 8px);\n    position: absolute;\n    transform-origin: center;\n    transition-duration: $speed;\n    transition-property: background-color, opacity, transform;\n    transition-timing-function: $easing;\n    width: 16px;\n    &:nth-child(1) {\n      top: calc(50% - 6px); }\n    &:nth-child(2) {\n      top: calc(50% - 1px); }\n    &:nth-child(3) {\n      top: calc(50% + 4px); } }\n  &:hover {\n    background-color: bulmaRgba(black, 0.05); }\n  // Modifers\n  &.is-active {\n    span {\n      &:nth-child(1) {\n        transform: translateY(5px) rotate(45deg); }\n      &:nth-child(2) {\n        opacity: 0; }\n      &:nth-child(3) {\n        transform: translateY(-5px) rotate(-45deg); } } } }\n\n@mixin overflow-touch {\n  -webkit-overflow-scrolling: touch; }\n\n@mixin placeholder {\n  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input';\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content; } } }\n\n@mixin reset {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background: none;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: 1em;\n  margin: 0;\n  padding: 0; }\n\n// Responsiveness\n\n@mixin from($device) {\n  @media screen and (min-width: $device) {\n    @content; } }\n\n@mixin until($device) {\n  @media screen and (max-width: $device - 1px) {\n    @content; } }\n\n@mixin mobile {\n  @media screen and (max-width: $tablet - 1px) {\n    @content; } }\n\n@mixin tablet {\n  @media screen and (min-width: $tablet), print {\n    @content; } }\n\n@mixin tablet-only {\n  @media screen and (min-width: $tablet) and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin touch {\n  @media screen and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin desktop {\n  @media screen and (min-width: $desktop) {\n    @content; } }\n\n@mixin desktop-only {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $desktop) and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin until-widescreen {\n  @if $widescreen-enabled {\n    @media screen and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin widescreen {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $widescreen) {\n      @content; } } }\n\n@mixin widescreen-only {\n  @if $widescreen-enabled and $fullhd-enabled {\n    @media screen and (min-width: $widescreen) and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin until-fullhd {\n  @if $fullhd-enabled {\n    @media screen and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin fullhd {\n  @if $fullhd-enabled {\n    @media screen and (min-width: $fullhd) {\n      @content; } } }\n\n@mixin ltr {\n  @if not $rtl {\n    @content; } }\n\n@mixin rtl {\n  @if $rtl {\n    @content; } }\n\n@mixin ltr-property($property, $spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$property}-#{$opposite}: $spacing; }\n  @else {\n    #{$property}-#{$normal}: $spacing; } }\n\n@mixin ltr-position($spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$opposite}: $spacing; }\n  @else {\n    #{$normal}: $spacing; } }\n\n// Placeholders\n\n@mixin unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n@mixin arrow($color: transparent) {\n  border: 3px solid $color;\n  border-radius: 2px;\n  border-right: 0;\n  border-top: 0;\n  content: \" \";\n  display: block;\n  height: 0.625em;\n  margin-top: -0.4375em;\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  transform: rotate(-45deg);\n  transform-origin: center;\n  width: 0.625em; }\n\n@mixin block($spacing: $block-spacing) {\n  &:not(:last-child) {\n    margin-bottom: $spacing; } }\n\n@mixin delete {\n  @include unselectable;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  background-color: bulmaRgba($scheme-invert, 0.2);\n  border: none;\n  border-radius: $radius-rounded;\n  cursor: pointer;\n  pointer-events: auto;\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  font-size: 0;\n  height: 20px;\n  max-height: 20px;\n  max-width: 20px;\n  min-height: 20px;\n  min-width: 20px;\n  outline: none;\n  position: relative;\n  vertical-align: top;\n  width: 20px;\n  &::before,\n  &::after {\n    background-color: $scheme-main;\n    content: \"\";\n    display: block;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n    transform-origin: center center; }\n  &::before {\n    height: 2px;\n    width: 50%; }\n  &::after {\n    height: 50%;\n    width: 2px; }\n  &:hover,\n  &:focus {\n    background-color: bulmaRgba($scheme-invert, 0.3); }\n  &:active {\n    background-color: bulmaRgba($scheme-invert, 0.4); }\n  // Sizes\n  &.is-small {\n    height: 16px;\n    max-height: 16px;\n    max-width: 16px;\n    min-height: 16px;\n    min-width: 16px;\n    width: 16px; }\n  &.is-medium {\n    height: 24px;\n    max-height: 24px;\n    max-width: 24px;\n    min-height: 24px;\n    min-width: 24px;\n    width: 24px; }\n  &.is-large {\n    height: 32px;\n    max-height: 32px;\n    max-width: 32px;\n    min-height: 32px;\n    min-width: 32px;\n    width: 32px; } }\n\n@mixin loader {\n  animation: spinAround 500ms infinite linear;\n  border: 2px solid $grey-lighter;\n  border-radius: $radius-rounded;\n  border-right-color: transparent;\n  border-top-color: transparent;\n  content: \"\";\n  display: block;\n  height: 1em;\n  position: relative;\n  width: 1em; }\n\n@mixin overlay($offset: 0) {\n  bottom: $offset;\n  left: $offset;\n  position: absolute;\n  right: $offset;\n  top: $offset; }\n\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"@import \"../utilities/mixins\";\n\n$column-gap: 0.75rem !default;\n\n.column {\n  display: block;\n  flex-basis: 0;\n  flex-grow: 1;\n  flex-shrink: 1;\n  padding: $column-gap;\n  .columns.is-mobile > &.is-narrow {\n    flex: none;\n    width: unset; }\n  .columns.is-mobile > &.is-full {\n    flex: none;\n    width: 100%; }\n  .columns.is-mobile > &.is-three-quarters {\n    flex: none;\n    width: 75%; }\n  .columns.is-mobile > &.is-two-thirds {\n    flex: none;\n    width: 66.6666%; }\n  .columns.is-mobile > &.is-half {\n    flex: none;\n    width: 50%; }\n  .columns.is-mobile > &.is-one-third {\n    flex: none;\n    width: 33.3333%; }\n  .columns.is-mobile > &.is-one-quarter {\n    flex: none;\n    width: 25%; }\n  .columns.is-mobile > &.is-one-fifth {\n    flex: none;\n    width: 20%; }\n  .columns.is-mobile > &.is-two-fifths {\n    flex: none;\n    width: 40%; }\n  .columns.is-mobile > &.is-three-fifths {\n    flex: none;\n    width: 60%; }\n  .columns.is-mobile > &.is-four-fifths {\n    flex: none;\n    width: 80%; }\n  .columns.is-mobile > &.is-offset-three-quarters {\n    @include ltr-property(\"margin\", 75%, false); }\n  .columns.is-mobile > &.is-offset-two-thirds {\n    @include ltr-property(\"margin\", 66.6666%, false); }\n  .columns.is-mobile > &.is-offset-half {\n    @include ltr-property(\"margin\", 50%, false); }\n  .columns.is-mobile > &.is-offset-one-third {\n    @include ltr-property(\"margin\", 33.3333%, false); }\n  .columns.is-mobile > &.is-offset-one-quarter {\n    @include ltr-property(\"margin\", 25%, false); }\n  .columns.is-mobile > &.is-offset-one-fifth {\n    @include ltr-property(\"margin\", 20%, false); }\n  .columns.is-mobile > &.is-offset-two-fifths {\n    @include ltr-property(\"margin\", 40%, false); }\n  .columns.is-mobile > &.is-offset-three-fifths {\n    @include ltr-property(\"margin\", 60%, false); }\n  .columns.is-mobile > &.is-offset-four-fifths {\n    @include ltr-property(\"margin\", 80%, false); }\n  @for $i from 0 through 12 {\n    .columns.is-mobile > &.is-#{$i} {\n      flex: none;\n      width: percentage(divide($i, 12)); }\n    .columns.is-mobile > &.is-offset-#{$i} {\n      @include ltr-property(\"margin\", percentage(divide($i, 12)), false); } }\n  @include mobile {\n    &.is-narrow-mobile {\n      flex: none;\n      width: unset; }\n    &.is-full-mobile {\n      flex: none;\n      width: 100%; }\n    &.is-three-quarters-mobile {\n      flex: none;\n      width: 75%; }\n    &.is-two-thirds-mobile {\n      flex: none;\n      width: 66.6666%; }\n    &.is-half-mobile {\n      flex: none;\n      width: 50%; }\n    &.is-one-third-mobile {\n      flex: none;\n      width: 33.3333%; }\n    &.is-one-quarter-mobile {\n      flex: none;\n      width: 25%; }\n    &.is-one-fifth-mobile {\n      flex: none;\n      width: 20%; }\n    &.is-two-fifths-mobile {\n      flex: none;\n      width: 40%; }\n    &.is-three-fifths-mobile {\n      flex: none;\n      width: 60%; }\n    &.is-four-fifths-mobile {\n      flex: none;\n      width: 80%; }\n    &.is-offset-three-quarters-mobile {\n      @include ltr-property(\"margin\", 75%, false); }\n    &.is-offset-two-thirds-mobile {\n      @include ltr-property(\"margin\", 66.6666%, false); }\n    &.is-offset-half-mobile {\n      @include ltr-property(\"margin\", 50%, false); }\n    &.is-offset-one-third-mobile {\n      @include ltr-property(\"margin\", 33.3333%, false); }\n    &.is-offset-one-quarter-mobile {\n      @include ltr-property(\"margin\", 25%, false); }\n    &.is-offset-one-fifth-mobile {\n      @include ltr-property(\"margin\", 20%, false); }\n    &.is-offset-two-fifths-mobile {\n      @include ltr-property(\"margin\", 40%, false); }\n    &.is-offset-three-fifths-mobile {\n      @include ltr-property(\"margin\", 60%, false); }\n    &.is-offset-four-fifths-mobile {\n      @include ltr-property(\"margin\", 80%, false); }\n    @for $i from 0 through 12 {\n      &.is-#{$i}-mobile {\n        flex: none;\n        width: percentage(divide($i, 12)); }\n      &.is-offset-#{$i}-mobile {\n        @include ltr-property(\"margin\", percentage(divide($i, 12)), false); } } }\n  @include tablet {\n    &.is-narrow,\n    &.is-narrow-tablet {\n      flex: none;\n      width: unset; }\n    &.is-full,\n    &.is-full-tablet {\n      flex: none;\n      width: 100%; }\n    &.is-three-quarters,\n    &.is-three-quarters-tablet {\n      flex: none;\n      width: 75%; }\n    &.is-two-thirds,\n    &.is-two-thirds-tablet {\n      flex: none;\n      width: 66.6666%; }\n    &.is-half,\n    &.is-half-tablet {\n      flex: none;\n      width: 50%; }\n    &.is-one-third,\n    &.is-one-third-tablet {\n      flex: none;\n      width: 33.3333%; }\n    &.is-one-quarter,\n    &.is-one-quarter-tablet {\n      flex: none;\n      width: 25%; }\n    &.is-one-fifth,\n    &.is-one-fifth-tablet {\n      flex: none;\n      width: 20%; }\n    &.is-two-fifths,\n    &.is-two-fifths-tablet {\n      flex: none;\n      width: 40%; }\n    &.is-three-fifths,\n    &.is-three-fifths-tablet {\n      flex: none;\n      width: 60%; }\n    &.is-four-fifths,\n    &.is-four-fifths-tablet {\n      flex: none;\n      width: 80%; }\n    &.is-offset-three-quarters,\n    &.is-offset-three-quarters-tablet {\n      @include ltr-property(\"margin\", 75%, false); }\n    &.is-offset-two-thirds,\n    &.is-offset-two-thirds-tablet {\n      @include ltr-property(\"margin\", 66.6666%, false); }\n    &.is-offset-half,\n    &.is-offset-half-tablet {\n      @include ltr-property(\"margin\", 50%, false); }\n    &.is-offset-one-third,\n    &.is-offset-one-third-tablet {\n      @include ltr-property(\"margin\", 33.3333%, false); }\n    &.is-offset-one-quarter,\n    &.is-offset-one-quarter-tablet {\n      @include ltr-property(\"margin\", 25%, false); }\n    &.is-offset-one-fifth,\n    &.is-offset-one-fifth-tablet {\n      @include ltr-property(\"margin\", 20%, false); }\n    &.is-offset-two-fifths,\n    &.is-offset-two-fifths-tablet {\n      @include ltr-property(\"margin\", 40%, false); }\n    &.is-offset-three-fifths,\n    &.is-offset-three-fifths-tablet {\n      @include ltr-property(\"margin\", 60%, false); }\n    &.is-offset-four-fifths,\n    &.is-offset-four-fifths-tablet {\n      @include ltr-property(\"margin\", 80%, false); }\n    @for $i from 0 through 12 {\n      &.is-#{$i},\n      &.is-#{$i}-tablet {\n        flex: none;\n        width: percentage(divide($i, 12)); }\n      &.is-offset-#{$i},\n      &.is-offset-#{$i}-tablet {\n        @include ltr-property(\"margin\", percentage(divide($i, 12)), false); } } }\n  @include touch {\n    &.is-narrow-touch {\n      flex: none;\n      width: unset; }\n    &.is-full-touch {\n      flex: none;\n      width: 100%; }\n    &.is-three-quarters-touch {\n      flex: none;\n      width: 75%; }\n    &.is-two-thirds-touch {\n      flex: none;\n      width: 66.6666%; }\n    &.is-half-touch {\n      flex: none;\n      width: 50%; }\n    &.is-one-third-touch {\n      flex: none;\n      width: 33.3333%; }\n    &.is-one-quarter-touch {\n      flex: none;\n      width: 25%; }\n    &.is-one-fifth-touch {\n      flex: none;\n      width: 20%; }\n    &.is-two-fifths-touch {\n      flex: none;\n      width: 40%; }\n    &.is-three-fifths-touch {\n      flex: none;\n      width: 60%; }\n    &.is-four-fifths-touch {\n      flex: none;\n      width: 80%; }\n    &.is-offset-three-quarters-touch {\n      @include ltr-property(\"margin\", 75%, false); }\n    &.is-offset-two-thirds-touch {\n      @include ltr-property(\"margin\", 66.6666%, false); }\n    &.is-offset-half-touch {\n      @include ltr-property(\"margin\", 50%, false); }\n    &.is-offset-one-third-touch {\n      @include ltr-property(\"margin\", 33.3333%, false); }\n    &.is-offset-one-quarter-touch {\n      @include ltr-property(\"margin\", 25%, false); }\n    &.is-offset-one-fifth-touch {\n      @include ltr-property(\"margin\", 20%, false); }\n    &.is-offset-two-fifths-touch {\n      @include ltr-property(\"margin\", 40%, false); }\n    &.is-offset-three-fifths-touch {\n      @include ltr-property(\"margin\", 60%, false); }\n    &.is-offset-four-fifths-touch {\n      @include ltr-property(\"margin\", 80%, false); }\n    @for $i from 0 through 12 {\n      &.is-#{$i}-touch {\n        flex: none;\n        width: percentage(divide($i, 12)); }\n      &.is-offset-#{$i}-touch {\n        @include ltr-property(\"margin\", percentage(divide($i, 12)), false); } } }\n  @include desktop {\n    &.is-narrow-desktop {\n      flex: none;\n      width: unset; }\n    &.is-full-desktop {\n      flex: none;\n      width: 100%; }\n    &.is-three-quarters-desktop {\n      flex: none;\n      width: 75%; }\n    &.is-two-thirds-desktop {\n      flex: none;\n      width: 66.6666%; }\n    &.is-half-desktop {\n      flex: none;\n      width: 50%; }\n    &.is-one-third-desktop {\n      flex: none;\n      width: 33.3333%; }\n    &.is-one-quarter-desktop {\n      flex: none;\n      width: 25%; }\n    &.is-one-fifth-desktop {\n      flex: none;\n      width: 20%; }\n    &.is-two-fifths-desktop {\n      flex: none;\n      width: 40%; }\n    &.is-three-fifths-desktop {\n      flex: none;\n      width: 60%; }\n    &.is-four-fifths-desktop {\n      flex: none;\n      width: 80%; }\n    &.is-offset-three-quarters-desktop {\n      @include ltr-property(\"margin\", 75%, false); }\n    &.is-offset-two-thirds-desktop {\n      @include ltr-property(\"margin\", 66.6666%, false); }\n    &.is-offset-half-desktop {\n      @include ltr-property(\"margin\", 50%, false); }\n    &.is-offset-one-third-desktop {\n      @include ltr-property(\"margin\", 33.3333%, false); }\n    &.is-offset-one-quarter-desktop {\n      @include ltr-property(\"margin\", 25%, false); }\n    &.is-offset-one-fifth-desktop {\n      @include ltr-property(\"margin\", 20%, false); }\n    &.is-offset-two-fifths-desktop {\n      @include ltr-property(\"margin\", 40%, false); }\n    &.is-offset-three-fifths-desktop {\n      @include ltr-property(\"margin\", 60%, false); }\n    &.is-offset-four-fifths-desktop {\n      @include ltr-property(\"margin\", 80%, false); }\n    @for $i from 0 through 12 {\n      &.is-#{$i}-desktop {\n        flex: none;\n        width: percentage(divide($i, 12)); }\n      &.is-offset-#{$i}-desktop {\n        @include ltr-property(\"margin\", percentage(divide($i, 12)), false); } } }\n  @include widescreen {\n    &.is-narrow-widescreen {\n      flex: none;\n      width: unset; }\n    &.is-full-widescreen {\n      flex: none;\n      width: 100%; }\n    &.is-three-quarters-widescreen {\n      flex: none;\n      width: 75%; }\n    &.is-two-thirds-widescreen {\n      flex: none;\n      width: 66.6666%; }\n    &.is-half-widescreen {\n      flex: none;\n      width: 50%; }\n    &.is-one-third-widescreen {\n      flex: none;\n      width: 33.3333%; }\n    &.is-one-quarter-widescreen {\n      flex: none;\n      width: 25%; }\n    &.is-one-fifth-widescreen {\n      flex: none;\n      width: 20%; }\n    &.is-two-fifths-widescreen {\n      flex: none;\n      width: 40%; }\n    &.is-three-fifths-widescreen {\n      flex: none;\n      width: 60%; }\n    &.is-four-fifths-widescreen {\n      flex: none;\n      width: 80%; }\n    &.is-offset-three-quarters-widescreen {\n      @include ltr-property(\"margin\", 75%, false); }\n    &.is-offset-two-thirds-widescreen {\n      @include ltr-property(\"margin\", 66.6666%, false); }\n    &.is-offset-half-widescreen {\n      @include ltr-property(\"margin\", 50%, false); }\n    &.is-offset-one-third-widescreen {\n      @include ltr-property(\"margin\", 33.3333%, false); }\n    &.is-offset-one-quarter-widescreen {\n      @include ltr-property(\"margin\", 25%, false); }\n    &.is-offset-one-fifth-widescreen {\n      @include ltr-property(\"margin\", 20%, false); }\n    &.is-offset-two-fifths-widescreen {\n      @include ltr-property(\"margin\", 40%, false); }\n    &.is-offset-three-fifths-widescreen {\n      @include ltr-property(\"margin\", 60%, false); }\n    &.is-offset-four-fifths-widescreen {\n      @include ltr-property(\"margin\", 80%, false); }\n    @for $i from 0 through 12 {\n      &.is-#{$i}-widescreen {\n        flex: none;\n        width: percentage(divide($i, 12)); }\n      &.is-offset-#{$i}-widescreen {\n        @include ltr-property(\"margin\", percentage(divide($i, 12)), false); } } }\n  @include fullhd {\n    &.is-narrow-fullhd {\n      flex: none;\n      width: unset; }\n    &.is-full-fullhd {\n      flex: none;\n      width: 100%; }\n    &.is-three-quarters-fullhd {\n      flex: none;\n      width: 75%; }\n    &.is-two-thirds-fullhd {\n      flex: none;\n      width: 66.6666%; }\n    &.is-half-fullhd {\n      flex: none;\n      width: 50%; }\n    &.is-one-third-fullhd {\n      flex: none;\n      width: 33.3333%; }\n    &.is-one-quarter-fullhd {\n      flex: none;\n      width: 25%; }\n    &.is-one-fifth-fullhd {\n      flex: none;\n      width: 20%; }\n    &.is-two-fifths-fullhd {\n      flex: none;\n      width: 40%; }\n    &.is-three-fifths-fullhd {\n      flex: none;\n      width: 60%; }\n    &.is-four-fifths-fullhd {\n      flex: none;\n      width: 80%; }\n    &.is-offset-three-quarters-fullhd {\n      @include ltr-property(\"margin\", 75%, false); }\n    &.is-offset-two-thirds-fullhd {\n      @include ltr-property(\"margin\", 66.6666%, false); }\n    &.is-offset-half-fullhd {\n      @include ltr-property(\"margin\", 50%, false); }\n    &.is-offset-one-third-fullhd {\n      @include ltr-property(\"margin\", 33.3333%, false); }\n    &.is-offset-one-quarter-fullhd {\n      @include ltr-property(\"margin\", 25%, false); }\n    &.is-offset-one-fifth-fullhd {\n      @include ltr-property(\"margin\", 20%, false); }\n    &.is-offset-two-fifths-fullhd {\n      @include ltr-property(\"margin\", 40%, false); }\n    &.is-offset-three-fifths-fullhd {\n      @include ltr-property(\"margin\", 60%, false); }\n    &.is-offset-four-fifths-fullhd {\n      @include ltr-property(\"margin\", 80%, false); }\n    @for $i from 0 through 12 {\n      &.is-#{$i}-fullhd {\n        flex: none;\n        width: percentage(divide($i, 12)); }\n      &.is-offset-#{$i}-fullhd {\n        @include ltr-property(\"margin\", percentage(divide($i, 12)), false); } } } }\n\n.columns {\n  @include ltr-property(\"margin\", (-$column-gap), false);\n  @include ltr-property(\"margin\", (-$column-gap));\n  margin-top: (-$column-gap);\n  &:last-child {\n    margin-bottom: (-$column-gap); }\n  &:not(:last-child) {\n    margin-bottom: calc(1.5rem - #{$column-gap}); }\n  // Modifiers\n  &.is-centered {\n    justify-content: center; }\n  &.is-gapless {\n    @include ltr-property(\"margin\", 0, false);\n    @include ltr-property(\"margin\", 0);\n    margin-top: 0;\n    & > .column {\n      margin: 0;\n      padding: 0 !important; }\n    &:not(:last-child) {\n      margin-bottom: 1.5rem; }\n    &:last-child {\n      margin-bottom: 0; } }\n  &.is-mobile {\n    display: flex; }\n  &.is-multiline {\n    flex-wrap: wrap; }\n  &.is-vcentered {\n    align-items: center; }\n  // Responsiveness\n  @include tablet {\n    &:not(.is-desktop) {\n      display: flex; } }\n  @include desktop {\n    // Modifiers\n    &.is-desktop {\n      display: flex; } } }\n\n@if $variable-columns {\n  .columns.is-variable {\n    --columnGap: 0.75rem;\n    @include ltr-property(\"margin\", calc(-1 * var(--columnGap)), false);\n    @include ltr-property(\"margin\", calc(-1 * var(--columnGap)));\n    > .column {\n      padding-left: var(--columnGap);\n      padding-right: var(--columnGap); }\n    @for $i from 0 through 8 {\n      &.is-#{$i} {\n        --columnGap: #{$i * 0.25rem}; }\n      @include mobile {\n        &.is-#{$i}-mobile {\n          --columnGap: #{$i * 0.25rem}; } }\n      @include tablet {\n        &.is-#{$i}-tablet {\n          --columnGap: #{$i * 0.25rem}; } }\n      @include tablet-only {\n        &.is-#{$i}-tablet-only {\n          --columnGap: #{$i * 0.25rem}; } }\n      @include touch {\n        &.is-#{$i}-touch {\n          --columnGap: #{$i * 0.25rem}; } }\n      @include desktop {\n        &.is-#{$i}-desktop {\n          --columnGap: #{$i * 0.25rem}; } }\n      @include desktop-only {\n        &.is-#{$i}-desktop-only {\n          --columnGap: #{$i * 0.25rem}; } }\n      @include widescreen {\n        &.is-#{$i}-widescreen {\n          --columnGap: #{$i * 0.25rem}; } }\n      @include widescreen-only {\n        &.is-#{$i}-widescreen-only {\n          --columnGap: #{$i * 0.25rem}; } }\n      @include fullhd {\n        &.is-#{$i}-fullhd {\n          --columnGap: #{$i * 0.25rem}; } } } } }\n",
		"@import \"derived-variables\";\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \" \";\n    display: table; } }\n\n@mixin center($width, $height: 0) {\n  position: absolute;\n  @if $height != 0 {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$height} * 0.5)); }\n  @else {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$width} * 0.5)); } }\n\n@mixin fa($size, $dimensions) {\n  display: inline-block;\n  font-size: $size;\n  height: $dimensions;\n  line-height: $dimensions;\n  text-align: center;\n  vertical-align: top;\n  width: $dimensions; }\n\n@mixin hamburger($dimensions) {\n  cursor: pointer;\n  display: block;\n  height: $dimensions;\n  position: relative;\n  width: $dimensions;\n  span {\n    background-color: currentColor;\n    display: block;\n    height: 1px;\n    left: calc(50% - 8px);\n    position: absolute;\n    transform-origin: center;\n    transition-duration: $speed;\n    transition-property: background-color, opacity, transform;\n    transition-timing-function: $easing;\n    width: 16px;\n    &:nth-child(1) {\n      top: calc(50% - 6px); }\n    &:nth-child(2) {\n      top: calc(50% - 1px); }\n    &:nth-child(3) {\n      top: calc(50% + 4px); } }\n  &:hover {\n    background-color: bulmaRgba(black, 0.05); }\n  // Modifers\n  &.is-active {\n    span {\n      &:nth-child(1) {\n        transform: translateY(5px) rotate(45deg); }\n      &:nth-child(2) {\n        opacity: 0; }\n      &:nth-child(3) {\n        transform: translateY(-5px) rotate(-45deg); } } } }\n\n@mixin overflow-touch {\n  -webkit-overflow-scrolling: touch; }\n\n@mixin placeholder {\n  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input';\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content; } } }\n\n@mixin reset {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background: none;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: 1em;\n  margin: 0;\n  padding: 0; }\n\n// Responsiveness\n\n@mixin from($device) {\n  @media screen and (min-width: $device) {\n    @content; } }\n\n@mixin until($device) {\n  @media screen and (max-width: $device - 1px) {\n    @content; } }\n\n@mixin mobile {\n  @media screen and (max-width: $tablet - 1px) {\n    @content; } }\n\n@mixin tablet {\n  @media screen and (min-width: $tablet), print {\n    @content; } }\n\n@mixin tablet-only {\n  @media screen and (min-width: $tablet) and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin touch {\n  @media screen and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin desktop {\n  @media screen and (min-width: $desktop) {\n    @content; } }\n\n@mixin desktop-only {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $desktop) and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin until-widescreen {\n  @if $widescreen-enabled {\n    @media screen and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin widescreen {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $widescreen) {\n      @content; } } }\n\n@mixin widescreen-only {\n  @if $widescreen-enabled and $fullhd-enabled {\n    @media screen and (min-width: $widescreen) and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin until-fullhd {\n  @if $fullhd-enabled {\n    @media screen and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin fullhd {\n  @if $fullhd-enabled {\n    @media screen and (min-width: $fullhd) {\n      @content; } } }\n\n@mixin ltr {\n  @if not $rtl {\n    @content; } }\n\n@mixin rtl {\n  @if $rtl {\n    @content; } }\n\n@mixin ltr-property($property, $spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$property}-#{$opposite}: $spacing; }\n  @else {\n    #{$property}-#{$normal}: $spacing; } }\n\n@mixin ltr-position($spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$opposite}: $spacing; }\n  @else {\n    #{$normal}: $spacing; } }\n\n// Placeholders\n\n@mixin unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n@mixin arrow($color: transparent) {\n  border: 3px solid $color;\n  border-radius: 2px;\n  border-right: 0;\n  border-top: 0;\n  content: \" \";\n  display: block;\n  height: 0.625em;\n  margin-top: -0.4375em;\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  transform: rotate(-45deg);\n  transform-origin: center;\n  width: 0.625em; }\n\n@mixin block($spacing: $block-spacing) {\n  &:not(:last-child) {\n    margin-bottom: $spacing; } }\n\n@mixin delete {\n  @include unselectable;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  background-color: bulmaRgba($scheme-invert, 0.2);\n  border: none;\n  border-radius: $radius-rounded;\n  cursor: pointer;\n  pointer-events: auto;\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  font-size: 0;\n  height: 20px;\n  max-height: 20px;\n  max-width: 20px;\n  min-height: 20px;\n  min-width: 20px;\n  outline: none;\n  position: relative;\n  vertical-align: top;\n  width: 20px;\n  &::before,\n  &::after {\n    background-color: $scheme-main;\n    content: \"\";\n    display: block;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n    transform-origin: center center; }\n  &::before {\n    height: 2px;\n    width: 50%; }\n  &::after {\n    height: 50%;\n    width: 2px; }\n  &:hover,\n  &:focus {\n    background-color: bulmaRgba($scheme-invert, 0.3); }\n  &:active {\n    background-color: bulmaRgba($scheme-invert, 0.4); }\n  // Sizes\n  &.is-small {\n    height: 16px;\n    max-height: 16px;\n    max-width: 16px;\n    min-height: 16px;\n    min-width: 16px;\n    width: 16px; }\n  &.is-medium {\n    height: 24px;\n    max-height: 24px;\n    max-width: 24px;\n    min-height: 24px;\n    min-width: 24px;\n    width: 24px; }\n  &.is-large {\n    height: 32px;\n    max-height: 32px;\n    max-width: 32px;\n    min-height: 32px;\n    min-width: 32px;\n    width: 32px; } }\n\n@mixin loader {\n  animation: spinAround 500ms infinite linear;\n  border: 2px solid $grey-lighter;\n  border-radius: $radius-rounded;\n  border-right-color: transparent;\n  border-top-color: transparent;\n  content: \"\";\n  display: block;\n  height: 1em;\n  position: relative;\n  width: 1em; }\n\n@mixin overlay($offset: 0) {\n  bottom: $offset;\n  left: $offset;\n  position: absolute;\n  right: $offset;\n  top: $offset; }\n\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"@import \"../utilities/mixins\";\n\n$content-heading-color: $text-strong !default;\n$content-heading-weight: $weight-semibold !default;\n$content-heading-line-height: 1.125 !default;\n\n$content-blockquote-background-color: $background !default;\n$content-blockquote-border-left: 5px solid $border !default;\n$content-blockquote-padding: 1.25em 1.5em !default;\n\n$content-pre-padding: 1.25em 1.5em !default;\n\n$content-table-cell-border: 1px solid $border !default;\n$content-table-cell-border-width: 0 0 1px !default;\n$content-table-cell-padding: 0.5em 0.75em !default;\n$content-table-cell-heading-color: $text-strong !default;\n$content-table-head-cell-border-width: 0 0 2px !default;\n$content-table-head-cell-color: $text-strong !default;\n$content-table-foot-cell-border-width: 2px 0 0 !default;\n$content-table-foot-cell-color: $text-strong !default;\n\n.content {\n  @extend %block;\n  // Inline\n  li + li {\n    margin-top: 0.25em; }\n  // Block\n  p,\n  dl,\n  ol,\n  ul,\n  blockquote,\n  pre,\n  table {\n    &:not(:last-child) {\n      margin-bottom: 1em; } }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: $content-heading-color;\n    font-weight: $content-heading-weight;\n    line-height: $content-heading-line-height; }\n  h1 {\n    font-size: 2em;\n    margin-bottom: 0.5em;\n    &:not(:first-child) {\n      margin-top: 1em; } }\n  h2 {\n    font-size: 1.75em;\n    margin-bottom: 0.5714em;\n    &:not(:first-child) {\n      margin-top: 1.1428em; } }\n  h3 {\n    font-size: 1.5em;\n    margin-bottom: 0.6666em;\n    &:not(:first-child) {\n      margin-top: 1.3333em; } }\n  h4 {\n    font-size: 1.25em;\n    margin-bottom: 0.8em; }\n  h5 {\n    font-size: 1.125em;\n    margin-bottom: 0.8888em; }\n  h6 {\n    font-size: 1em;\n    margin-bottom: 1em; }\n  blockquote {\n    background-color: $content-blockquote-background-color;\n    @include ltr-property(\"border\", $content-blockquote-border-left, false);\n    padding: $content-blockquote-padding; }\n  ol {\n    list-style-position: outside;\n    @include ltr-property(\"margin\", 2em, false);\n    margin-top: 1em;\n    &:not([type]) {\n      list-style-type: decimal;\n      &.is-lower-alpha {\n        list-style-type: lower-alpha; }\n      &.is-lower-roman {\n        list-style-type: lower-roman; }\n      &.is-upper-alpha {\n        list-style-type: upper-alpha; }\n      &.is-upper-roman {\n        list-style-type: upper-roman; } } }\n  ul {\n    list-style: disc outside;\n    @include ltr-property(\"margin\", 2em, false);\n    margin-top: 1em;\n    ul {\n      list-style-type: circle;\n      margin-top: 0.5em;\n      ul {\n        list-style-type: square; } } }\n  dd {\n    @include ltr-property(\"margin\", 2em, false); }\n  figure {\n    margin-left: 2em;\n    margin-right: 2em;\n    text-align: center;\n    &:not(:first-child) {\n      margin-top: 2em; }\n    &:not(:last-child) {\n      margin-bottom: 2em; }\n    img {\n      display: inline-block; }\n    figcaption {\n      font-style: italic; } }\n  pre {\n    @include overflow-touch;\n    overflow-x: auto;\n    padding: $content-pre-padding;\n    white-space: pre;\n    word-wrap: normal; }\n  sup,\n  sub {\n    font-size: 75%; }\n  table {\n    width: 100%;\n    td,\n    th {\n      border: $content-table-cell-border;\n      border-width: $content-table-cell-border-width;\n      padding: $content-table-cell-padding;\n      vertical-align: top; }\n    th {\n      color: $content-table-cell-heading-color;\n      &:not([align]) {\n        text-align: inherit; } }\n    thead {\n      td,\n      th {\n        border-width: $content-table-head-cell-border-width;\n        color: $content-table-head-cell-color; } }\n    tfoot {\n      td,\n      th {\n        border-width: $content-table-foot-cell-border-width;\n        color: $content-table-foot-cell-color; } }\n    tbody {\n      tr {\n        &:last-child {\n          td,\n          th {\n            border-bottom-width: 0; } } } } }\n  .tabs {\n    li + li {\n      margin-top: 0; } }\n  // Sizes\n  &.is-small {\n    font-size: $size-small; }\n  &.is-normal {\n    font-size: $size-normal; }\n  &.is-medium {\n    font-size: $size-medium; }\n  &.is-large {\n    font-size: $size-large; } }\n",
		"@import \"derived-variables\";\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \" \";\n    display: table; } }\n\n@mixin center($width, $height: 0) {\n  position: absolute;\n  @if $height != 0 {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$height} * 0.5)); }\n  @else {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$width} * 0.5)); } }\n\n@mixin fa($size, $dimensions) {\n  display: inline-block;\n  font-size: $size;\n  height: $dimensions;\n  line-height: $dimensions;\n  text-align: center;\n  vertical-align: top;\n  width: $dimensions; }\n\n@mixin hamburger($dimensions) {\n  cursor: pointer;\n  display: block;\n  height: $dimensions;\n  position: relative;\n  width: $dimensions;\n  span {\n    background-color: currentColor;\n    display: block;\n    height: 1px;\n    left: calc(50% - 8px);\n    position: absolute;\n    transform-origin: center;\n    transition-duration: $speed;\n    transition-property: background-color, opacity, transform;\n    transition-timing-function: $easing;\n    width: 16px;\n    &:nth-child(1) {\n      top: calc(50% - 6px); }\n    &:nth-child(2) {\n      top: calc(50% - 1px); }\n    &:nth-child(3) {\n      top: calc(50% + 4px); } }\n  &:hover {\n    background-color: bulmaRgba(black, 0.05); }\n  // Modifers\n  &.is-active {\n    span {\n      &:nth-child(1) {\n        transform: translateY(5px) rotate(45deg); }\n      &:nth-child(2) {\n        opacity: 0; }\n      &:nth-child(3) {\n        transform: translateY(-5px) rotate(-45deg); } } } }\n\n@mixin overflow-touch {\n  -webkit-overflow-scrolling: touch; }\n\n@mixin placeholder {\n  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input';\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content; } } }\n\n@mixin reset {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background: none;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: 1em;\n  margin: 0;\n  padding: 0; }\n\n// Responsiveness\n\n@mixin from($device) {\n  @media screen and (min-width: $device) {\n    @content; } }\n\n@mixin until($device) {\n  @media screen and (max-width: $device - 1px) {\n    @content; } }\n\n@mixin mobile {\n  @media screen and (max-width: $tablet - 1px) {\n    @content; } }\n\n@mixin tablet {\n  @media screen and (min-width: $tablet), print {\n    @content; } }\n\n@mixin tablet-only {\n  @media screen and (min-width: $tablet) and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin touch {\n  @media screen and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin desktop {\n  @media screen and (min-width: $desktop) {\n    @content; } }\n\n@mixin desktop-only {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $desktop) and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin until-widescreen {\n  @if $widescreen-enabled {\n    @media screen and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin widescreen {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $widescreen) {\n      @content; } } }\n\n@mixin widescreen-only {\n  @if $widescreen-enabled and $fullhd-enabled {\n    @media screen and (min-width: $widescreen) and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin until-fullhd {\n  @if $fullhd-enabled {\n    @media screen and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin fullhd {\n  @if $fullhd-enabled {\n    @media screen and (min-width: $fullhd) {\n      @content; } } }\n\n@mixin ltr {\n  @if not $rtl {\n    @content; } }\n\n@mixin rtl {\n  @if $rtl {\n    @content; } }\n\n@mixin ltr-property($property, $spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$property}-#{$opposite}: $spacing; }\n  @else {\n    #{$property}-#{$normal}: $spacing; } }\n\n@mixin ltr-position($spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$opposite}: $spacing; }\n  @else {\n    #{$normal}: $spacing; } }\n\n// Placeholders\n\n@mixin unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n@mixin arrow($color: transparent) {\n  border: 3px solid $color;\n  border-radius: 2px;\n  border-right: 0;\n  border-top: 0;\n  content: \" \";\n  display: block;\n  height: 0.625em;\n  margin-top: -0.4375em;\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  transform: rotate(-45deg);\n  transform-origin: center;\n  width: 0.625em; }\n\n@mixin block($spacing: $block-spacing) {\n  &:not(:last-child) {\n    margin-bottom: $spacing; } }\n\n@mixin delete {\n  @include unselectable;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  background-color: bulmaRgba($scheme-invert, 0.2);\n  border: none;\n  border-radius: $radius-rounded;\n  cursor: pointer;\n  pointer-events: auto;\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  font-size: 0;\n  height: 20px;\n  max-height: 20px;\n  max-width: 20px;\n  min-height: 20px;\n  min-width: 20px;\n  outline: none;\n  position: relative;\n  vertical-align: top;\n  width: 20px;\n  &::before,\n  &::after {\n    background-color: $scheme-main;\n    content: \"\";\n    display: block;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n    transform-origin: center center; }\n  &::before {\n    height: 2px;\n    width: 50%; }\n  &::after {\n    height: 50%;\n    width: 2px; }\n  &:hover,\n  &:focus {\n    background-color: bulmaRgba($scheme-invert, 0.3); }\n  &:active {\n    background-color: bulmaRgba($scheme-invert, 0.4); }\n  // Sizes\n  &.is-small {\n    height: 16px;\n    max-height: 16px;\n    max-width: 16px;\n    min-height: 16px;\n    min-width: 16px;\n    width: 16px; }\n  &.is-medium {\n    height: 24px;\n    max-height: 24px;\n    max-width: 24px;\n    min-height: 24px;\n    min-width: 24px;\n    width: 24px; }\n  &.is-large {\n    height: 32px;\n    max-height: 32px;\n    max-width: 32px;\n    min-height: 32px;\n    min-width: 32px;\n    width: 32px; } }\n\n@mixin loader {\n  animation: spinAround 500ms infinite linear;\n  border: 2px solid $grey-lighter;\n  border-radius: $radius-rounded;\n  border-right-color: transparent;\n  border-top-color: transparent;\n  content: \"\";\n  display: block;\n  height: 1em;\n  position: relative;\n  width: 1em; }\n\n@mixin overlay($offset: 0) {\n  bottom: $offset;\n  left: $offset;\n  position: absolute;\n  right: $offset;\n  top: $offset; }\n\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"@import \"../utilities/controls\";\n@import \"../utilities/mixins\";\n\n$form-colors: $colors !default;\n\n$input-color: $text-strong !default;\n$input-background-color: $scheme-main !default;\n$input-border-color: $border !default;\n$input-height: $control-height !default;\n$input-shadow: inset 0 0.0625em 0.125em rgba($scheme-invert, 0.05) !default;\n$input-placeholder-color: bulmaRgba($input-color, 0.3) !default;\n\n$input-hover-color: $text-strong !default;\n$input-hover-border-color: $border-hover !default;\n\n$input-focus-color: $text-strong !default;\n$input-focus-border-color: $link !default;\n$input-focus-box-shadow-size: 0 0 0 0.125em !default;\n$input-focus-box-shadow-color: bulmaRgba($link, 0.25) !default;\n\n$input-disabled-color: $text-light !default;\n$input-disabled-background-color: $background !default;\n$input-disabled-border-color: $background !default;\n$input-disabled-placeholder-color: bulmaRgba($input-disabled-color, 0.3) !default;\n\n$input-arrow: $link !default;\n\n$input-icon-color: $border !default;\n$input-icon-active-color: $text !default;\n\n$input-radius: $radius !default;\n\n@mixin input {\n  @extend %control;\n  background-color: $input-background-color;\n  border-color: $input-border-color;\n  border-radius: $input-radius;\n  color: $input-color;\n  @include placeholder {\n    color: $input-placeholder-color; }\n  &:hover,\n  &.is-hovered {\n    border-color: $input-hover-border-color; }\n  &:focus,\n  &.is-focused,\n  &:active,\n  &.is-active {\n    border-color: $input-focus-border-color;\n    box-shadow: $input-focus-box-shadow-size $input-focus-box-shadow-color; }\n  &[disabled],\n  fieldset[disabled] & {\n    background-color: $input-disabled-background-color;\n    border-color: $input-disabled-border-color;\n    box-shadow: none;\n    color: $input-disabled-color;\n    @include placeholder {\n      color: $input-disabled-placeholder-color; } } }\n\n%input {\n  @include input; }\n",
		"@import \"derived-variables\";\n\n$control-radius: $radius !default;\n$control-radius-small: $radius-small !default;\n\n$control-border-width: 1px !default;\n\n$control-height: 2.5em !default;\n$control-line-height: 1.5 !default;\n\n$control-padding-vertical: calc(0.5em - #{$control-border-width}) !default;\n$control-padding-horizontal: calc(0.75em - #{$control-border-width}) !default;\n\n@mixin control {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  align-items: center;\n  border: $control-border-width solid transparent;\n  border-radius: $control-radius;\n  box-shadow: none;\n  display: inline-flex;\n  font-size: $size-normal;\n  height: $control-height;\n  justify-content: flex-start;\n  line-height: $control-line-height;\n  padding-bottom: $control-padding-vertical;\n  padding-left: $control-padding-horizontal;\n  padding-right: $control-padding-horizontal;\n  padding-top: $control-padding-vertical;\n  position: relative;\n  vertical-align: top;\n  // States\n  &:focus,\n  &.is-focused,\n  &:active,\n  &.is-active {\n    outline: none; }\n  &[disabled],\n  fieldset[disabled] & {\n    cursor: not-allowed; } }\n\n// The controls sizes use mixins so they can be used at different breakpoints\n@mixin control-small {\n  border-radius: $control-radius-small;\n  font-size: $size-small; }\n@mixin control-medium {\n  font-size: $size-medium; }\n@mixin control-large {\n  font-size: $size-large; }\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"@import \"derived-variables\";\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \" \";\n    display: table; } }\n\n@mixin center($width, $height: 0) {\n  position: absolute;\n  @if $height != 0 {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$height} * 0.5)); }\n  @else {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$width} * 0.5)); } }\n\n@mixin fa($size, $dimensions) {\n  display: inline-block;\n  font-size: $size;\n  height: $dimensions;\n  line-height: $dimensions;\n  text-align: center;\n  vertical-align: top;\n  width: $dimensions; }\n\n@mixin hamburger($dimensions) {\n  cursor: pointer;\n  display: block;\n  height: $dimensions;\n  position: relative;\n  width: $dimensions;\n  span {\n    background-color: currentColor;\n    display: block;\n    height: 1px;\n    left: calc(50% - 8px);\n    position: absolute;\n    transform-origin: center;\n    transition-duration: $speed;\n    transition-property: background-color, opacity, transform;\n    transition-timing-function: $easing;\n    width: 16px;\n    &:nth-child(1) {\n      top: calc(50% - 6px); }\n    &:nth-child(2) {\n      top: calc(50% - 1px); }\n    &:nth-child(3) {\n      top: calc(50% + 4px); } }\n  &:hover {\n    background-color: bulmaRgba(black, 0.05); }\n  // Modifers\n  &.is-active {\n    span {\n      &:nth-child(1) {\n        transform: translateY(5px) rotate(45deg); }\n      &:nth-child(2) {\n        opacity: 0; }\n      &:nth-child(3) {\n        transform: translateY(-5px) rotate(-45deg); } } } }\n\n@mixin overflow-touch {\n  -webkit-overflow-scrolling: touch; }\n\n@mixin placeholder {\n  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input';\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content; } } }\n\n@mixin reset {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background: none;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: 1em;\n  margin: 0;\n  padding: 0; }\n\n// Responsiveness\n\n@mixin from($device) {\n  @media screen and (min-width: $device) {\n    @content; } }\n\n@mixin until($device) {\n  @media screen and (max-width: $device - 1px) {\n    @content; } }\n\n@mixin mobile {\n  @media screen and (max-width: $tablet - 1px) {\n    @content; } }\n\n@mixin tablet {\n  @media screen and (min-width: $tablet), print {\n    @content; } }\n\n@mixin tablet-only {\n  @media screen and (min-width: $tablet) and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin touch {\n  @media screen and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin desktop {\n  @media screen and (min-width: $desktop) {\n    @content; } }\n\n@mixin desktop-only {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $desktop) and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin until-widescreen {\n  @if $widescreen-enabled {\n    @media screen and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin widescreen {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $widescreen) {\n      @content; } } }\n\n@mixin widescreen-only {\n  @if $widescreen-enabled and $fullhd-enabled {\n    @media screen and (min-width: $widescreen) and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin until-fullhd {\n  @if $fullhd-enabled {\n    @media screen and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin fullhd {\n  @if $fullhd-enabled {\n    @media screen and (min-width: $fullhd) {\n      @content; } } }\n\n@mixin ltr {\n  @if not $rtl {\n    @content; } }\n\n@mixin rtl {\n  @if $rtl {\n    @content; } }\n\n@mixin ltr-property($property, $spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$property}-#{$opposite}: $spacing; }\n  @else {\n    #{$property}-#{$normal}: $spacing; } }\n\n@mixin ltr-position($spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$opposite}: $spacing; }\n  @else {\n    #{$normal}: $spacing; } }\n\n// Placeholders\n\n@mixin unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n@mixin arrow($color: transparent) {\n  border: 3px solid $color;\n  border-radius: 2px;\n  border-right: 0;\n  border-top: 0;\n  content: \" \";\n  display: block;\n  height: 0.625em;\n  margin-top: -0.4375em;\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  transform: rotate(-45deg);\n  transform-origin: center;\n  width: 0.625em; }\n\n@mixin block($spacing: $block-spacing) {\n  &:not(:last-child) {\n    margin-bottom: $spacing; } }\n\n@mixin delete {\n  @include unselectable;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  background-color: bulmaRgba($scheme-invert, 0.2);\n  border: none;\n  border-radius: $radius-rounded;\n  cursor: pointer;\n  pointer-events: auto;\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  font-size: 0;\n  height: 20px;\n  max-height: 20px;\n  max-width: 20px;\n  min-height: 20px;\n  min-width: 20px;\n  outline: none;\n  position: relative;\n  vertical-align: top;\n  width: 20px;\n  &::before,\n  &::after {\n    background-color: $scheme-main;\n    content: \"\";\n    display: block;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n    transform-origin: center center; }\n  &::before {\n    height: 2px;\n    width: 50%; }\n  &::after {\n    height: 50%;\n    width: 2px; }\n  &:hover,\n  &:focus {\n    background-color: bulmaRgba($scheme-invert, 0.3); }\n  &:active {\n    background-color: bulmaRgba($scheme-invert, 0.4); }\n  // Sizes\n  &.is-small {\n    height: 16px;\n    max-height: 16px;\n    max-width: 16px;\n    min-height: 16px;\n    min-width: 16px;\n    width: 16px; }\n  &.is-medium {\n    height: 24px;\n    max-height: 24px;\n    max-width: 24px;\n    min-height: 24px;\n    min-width: 24px;\n    width: 24px; }\n  &.is-large {\n    height: 32px;\n    max-height: 32px;\n    max-width: 32px;\n    min-height: 32px;\n    min-width: 32px;\n    width: 32px; } }\n\n@mixin loader {\n  animation: spinAround 500ms infinite linear;\n  border: 2px solid $grey-lighter;\n  border-radius: $radius-rounded;\n  border-right-color: transparent;\n  border-top-color: transparent;\n  content: \"\";\n  display: block;\n  height: 1em;\n  position: relative;\n  width: 1em; }\n\n@mixin overlay($offset: 0) {\n  bottom: $offset;\n  left: $offset;\n  position: absolute;\n  right: $offset;\n  top: $offset; }\n\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"$textarea-padding: $control-padding-horizontal !default;\n$textarea-max-height: 40em !default;\n$textarea-min-height: 8em !default;\n\n$textarea-colors: $form-colors !default;\n\n%input-textarea {\n  @extend %input;\n  box-shadow: $input-shadow;\n  max-width: 100%;\n  width: 100%;\n  &[readonly] {\n    box-shadow: none; }\n  // Colors\n  @each $name, $pair in $textarea-colors {\n    $color: nth($pair, 1);\n    &.is-#{$name} {\n      border-color: $color;\n      &:focus,\n      &.is-focused,\n      &:active,\n      &.is-active {\n        box-shadow: $input-focus-box-shadow-size bulmaRgba($color, 0.25); } } }\n  // Sizes\n  &.is-small {\n    @include control-small; }\n  &.is-medium {\n    @include control-medium; }\n  &.is-large {\n    @include control-large; }\n  // Modifiers\n  &.is-fullwidth {\n    display: block;\n    width: 100%; }\n  &.is-inline {\n    display: inline;\n    width: auto; } }\n\n.input {\n  @extend %input-textarea;\n  &.is-rounded {\n    border-radius: $radius-rounded;\n    padding-left: calc(#{$control-padding-horizontal} + 0.375em);\n    padding-right: calc(#{$control-padding-horizontal} + 0.375em); }\n  &.is-static {\n    background-color: transparent;\n    border-color: transparent;\n    box-shadow: none;\n    padding-left: 0;\n    padding-right: 0; } }\n\n.textarea {\n  @extend %input-textarea;\n  display: block;\n  max-width: 100%;\n  min-width: 100%;\n  padding: $textarea-padding;\n  resize: vertical;\n  &:not([rows]) {\n    max-height: $textarea-max-height;\n    min-height: $textarea-min-height; }\n  &[rows] {\n    height: initial; }\n  // Modifiers\n  &.has-fixed-size {\n    resize: none; } }\n",
		"@import \"../utilities/mixins\";\n\n$table-color: $text-strong !default;\n$table-background-color: $scheme-main !default;\n\n$table-cell-border: 1px solid $border !default;\n$table-cell-border-width: 0 0 1px !default;\n$table-cell-padding: 0.5em 0.75em !default;\n$table-cell-heading-color: $text-strong !default;\n\n$table-head-cell-border-width: 0 0 2px !default;\n$table-head-cell-color: $text-strong !default;\n$table-foot-cell-border-width: 2px 0 0 !default;\n$table-foot-cell-color: $text-strong !default;\n\n$table-head-background-color: transparent !default;\n$table-body-background-color: transparent !default;\n$table-foot-background-color: transparent !default;\n\n$table-row-hover-background-color: $scheme-main-bis !default;\n\n$table-row-active-background-color: $primary !default;\n$table-row-active-color: $primary-invert !default;\n\n$table-striped-row-even-background-color: $scheme-main-bis !default;\n$table-striped-row-even-hover-background-color: $scheme-main-ter !default;\n\n$table-colors: $colors !default;\n\n.table {\n  @extend %block;\n  background-color: $table-background-color;\n  color: $table-color;\n  td,\n  th {\n    border: $table-cell-border;\n    border-width: $table-cell-border-width;\n    padding: $table-cell-padding;\n    vertical-align: top;\n    // Colors\n    @each $name, $pair in $table-colors {\n      $color: nth($pair, 1);\n      $color-invert: nth($pair, 2);\n      &.is-#{$name} {\n        background-color: $color;\n        border-color: $color;\n        color: $color-invert; } }\n    // Modifiers\n    &.is-narrow {\n      white-space: nowrap;\n      width: 1%; }\n    &.is-selected {\n      background-color: $table-row-active-background-color;\n      color: $table-row-active-color;\n      a,\n      strong {\n        color: currentColor; } }\n    &.is-vcentered {\n      vertical-align: middle; } }\n  th {\n    color: $table-cell-heading-color;\n    &:not([align]) {\n      text-align: inherit; } }\n  tr {\n    &.is-selected {\n      background-color: $table-row-active-background-color;\n      color: $table-row-active-color;\n      a,\n      strong {\n        color: currentColor; }\n      td,\n      th {\n        border-color: $table-row-active-color;\n        color: currentColor; } } }\n  thead {\n    background-color: $table-head-background-color;\n    td,\n    th {\n      border-width: $table-head-cell-border-width;\n      color: $table-head-cell-color; } }\n  tfoot {\n    background-color: $table-foot-background-color;\n    td,\n    th {\n      border-width: $table-foot-cell-border-width;\n      color: $table-foot-cell-color; } }\n  tbody {\n    background-color: $table-body-background-color;\n    tr {\n      &:last-child {\n        td,\n        th {\n          border-bottom-width: 0; } } } }\n  // Modifiers\n  &.is-bordered {\n    td,\n    th {\n      border-width: 1px; }\n    tr {\n      &:last-child {\n        td,\n        th {\n          border-bottom-width: 1px; } } } }\n  &.is-fullwidth {\n    width: 100%; }\n  &.is-hoverable {\n    tbody {\n      tr:not(.is-selected) {\n        &:hover {\n          background-color: $table-row-hover-background-color; } } }\n    &.is-striped {\n      tbody {\n        tr:not(.is-selected) {\n          &:hover {\n            background-color: $table-row-hover-background-color;\n            &:nth-child(even) {\n              background-color: $table-striped-row-even-hover-background-color; } } } } } }\n  &.is-narrow {\n    td,\n    th {\n      padding: 0.25em 0.5em; } }\n  &.is-striped {\n    tbody {\n      tr:not(.is-selected) {\n        &:nth-child(even) {\n          background-color: $table-striped-row-even-background-color; } } } } }\n\n.table-container {\n  @extend %block;\n  @include overflow-touch;\n  overflow: auto;\n  overflow-y: hidden;\n  max-width: 100%; }\n",
		"@import \"derived-variables\";\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \" \";\n    display: table; } }\n\n@mixin center($width, $height: 0) {\n  position: absolute;\n  @if $height != 0 {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$height} * 0.5)); }\n  @else {\n    left: calc(50% - (#{$width} * 0.5));\n    top: calc(50% - (#{$width} * 0.5)); } }\n\n@mixin fa($size, $dimensions) {\n  display: inline-block;\n  font-size: $size;\n  height: $dimensions;\n  line-height: $dimensions;\n  text-align: center;\n  vertical-align: top;\n  width: $dimensions; }\n\n@mixin hamburger($dimensions) {\n  cursor: pointer;\n  display: block;\n  height: $dimensions;\n  position: relative;\n  width: $dimensions;\n  span {\n    background-color: currentColor;\n    display: block;\n    height: 1px;\n    left: calc(50% - 8px);\n    position: absolute;\n    transform-origin: center;\n    transition-duration: $speed;\n    transition-property: background-color, opacity, transform;\n    transition-timing-function: $easing;\n    width: 16px;\n    &:nth-child(1) {\n      top: calc(50% - 6px); }\n    &:nth-child(2) {\n      top: calc(50% - 1px); }\n    &:nth-child(3) {\n      top: calc(50% + 4px); } }\n  &:hover {\n    background-color: bulmaRgba(black, 0.05); }\n  // Modifers\n  &.is-active {\n    span {\n      &:nth-child(1) {\n        transform: translateY(5px) rotate(45deg); }\n      &:nth-child(2) {\n        opacity: 0; }\n      &:nth-child(3) {\n        transform: translateY(-5px) rotate(-45deg); } } } }\n\n@mixin overflow-touch {\n  -webkit-overflow-scrolling: touch; }\n\n@mixin placeholder {\n  $placeholders: ':-moz' ':-webkit-input' '-moz' '-ms-input';\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content; } } }\n\n@mixin reset {\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background: none;\n  border: none;\n  color: currentColor;\n  font-family: inherit;\n  font-size: 1em;\n  margin: 0;\n  padding: 0; }\n\n// Responsiveness\n\n@mixin from($device) {\n  @media screen and (min-width: $device) {\n    @content; } }\n\n@mixin until($device) {\n  @media screen and (max-width: $device - 1px) {\n    @content; } }\n\n@mixin mobile {\n  @media screen and (max-width: $tablet - 1px) {\n    @content; } }\n\n@mixin tablet {\n  @media screen and (min-width: $tablet), print {\n    @content; } }\n\n@mixin tablet-only {\n  @media screen and (min-width: $tablet) and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin touch {\n  @media screen and (max-width: $desktop - 1px) {\n    @content; } }\n\n@mixin desktop {\n  @media screen and (min-width: $desktop) {\n    @content; } }\n\n@mixin desktop-only {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $desktop) and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin until-widescreen {\n  @if $widescreen-enabled {\n    @media screen and (max-width: $widescreen - 1px) {\n      @content; } } }\n\n@mixin widescreen {\n  @if $widescreen-enabled {\n    @media screen and (min-width: $widescreen) {\n      @content; } } }\n\n@mixin widescreen-only {\n  @if $widescreen-enabled and $fullhd-enabled {\n    @media screen and (min-width: $widescreen) and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin until-fullhd {\n  @if $fullhd-enabled {\n    @media screen and (max-width: $fullhd - 1px) {\n      @content; } } }\n\n@mixin fullhd {\n  @if $fullhd-enabled {\n    @media screen and (min-width: $fullhd) {\n      @content; } } }\n\n@mixin ltr {\n  @if not $rtl {\n    @content; } }\n\n@mixin rtl {\n  @if $rtl {\n    @content; } }\n\n@mixin ltr-property($property, $spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$property}-#{$opposite}: $spacing; }\n  @else {\n    #{$property}-#{$normal}: $spacing; } }\n\n@mixin ltr-position($spacing, $right: true) {\n  $normal: if($right, \"right\", \"left\");\n  $opposite: if($right, \"left\", \"right\");\n  @if $rtl {\n    #{$opposite}: $spacing; }\n  @else {\n    #{$normal}: $spacing; } }\n\n// Placeholders\n\n@mixin unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none; }\n\n@mixin arrow($color: transparent) {\n  border: 3px solid $color;\n  border-radius: 2px;\n  border-right: 0;\n  border-top: 0;\n  content: \" \";\n  display: block;\n  height: 0.625em;\n  margin-top: -0.4375em;\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  transform: rotate(-45deg);\n  transform-origin: center;\n  width: 0.625em; }\n\n@mixin block($spacing: $block-spacing) {\n  &:not(:last-child) {\n    margin-bottom: $spacing; } }\n\n@mixin delete {\n  @include unselectable;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  background-color: bulmaRgba($scheme-invert, 0.2);\n  border: none;\n  border-radius: $radius-rounded;\n  cursor: pointer;\n  pointer-events: auto;\n  display: inline-block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  font-size: 0;\n  height: 20px;\n  max-height: 20px;\n  max-width: 20px;\n  min-height: 20px;\n  min-width: 20px;\n  outline: none;\n  position: relative;\n  vertical-align: top;\n  width: 20px;\n  &::before,\n  &::after {\n    background-color: $scheme-main;\n    content: \"\";\n    display: block;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n    transform-origin: center center; }\n  &::before {\n    height: 2px;\n    width: 50%; }\n  &::after {\n    height: 50%;\n    width: 2px; }\n  &:hover,\n  &:focus {\n    background-color: bulmaRgba($scheme-invert, 0.3); }\n  &:active {\n    background-color: bulmaRgba($scheme-invert, 0.4); }\n  // Sizes\n  &.is-small {\n    height: 16px;\n    max-height: 16px;\n    max-width: 16px;\n    min-height: 16px;\n    min-width: 16px;\n    width: 16px; }\n  &.is-medium {\n    height: 24px;\n    max-height: 24px;\n    max-width: 24px;\n    min-height: 24px;\n    min-width: 24px;\n    width: 24px; }\n  &.is-large {\n    height: 32px;\n    max-height: 32px;\n    max-width: 32px;\n    min-height: 32px;\n    min-width: 32px;\n    width: 32px; } }\n\n@mixin loader {\n  animation: spinAround 500ms infinite linear;\n  border: 2px solid $grey-lighter;\n  border-radius: $radius-rounded;\n  border-right-color: transparent;\n  border-top-color: transparent;\n  content: \"\";\n  display: block;\n  height: 1em;\n  position: relative;\n  width: 1em; }\n\n@mixin overlay($offset: 0) {\n  bottom: $offset;\n  left: $offset;\n  position: absolute;\n  right: $offset;\n  top: $offset; }\n\n",
		"@import \"initial-variables\";\n@import \"functions\";\n\n$primary: $turquoise !default;\n\n$info: $cyan !default;\n$success: $green !default;\n$warning: $yellow !default;\n$danger: $red !default;\n\n$light: $white-ter !default;\n$dark: $grey-darker !default;\n\n// Invert colors\n\n$orange-invert: findColorInvert($orange) !default;\n$yellow-invert: findColorInvert($yellow) !default;\n$green-invert: findColorInvert($green) !default;\n$turquoise-invert: findColorInvert($turquoise) !default;\n$cyan-invert: findColorInvert($cyan) !default;\n$blue-invert: findColorInvert($blue) !default;\n$purple-invert: findColorInvert($purple) !default;\n$red-invert: findColorInvert($red) !default;\n\n$primary-invert: findColorInvert($primary) !default;\n$primary-light: findLightColor($primary) !default;\n$primary-dark: findDarkColor($primary) !default;\n$info-invert: findColorInvert($info) !default;\n$info-light: findLightColor($info) !default;\n$info-dark: findDarkColor($info) !default;\n$success-invert: findColorInvert($success) !default;\n$success-light: findLightColor($success) !default;\n$success-dark: findDarkColor($success) !default;\n$warning-invert: findColorInvert($warning) !default;\n$warning-light: findLightColor($warning) !default;\n$warning-dark: findDarkColor($warning) !default;\n$danger-invert: findColorInvert($danger) !default;\n$danger-light: findLightColor($danger) !default;\n$danger-dark: findDarkColor($danger) !default;\n$light-invert: findColorInvert($light) !default;\n$dark-invert: findColorInvert($dark) !default;\n\n// General colors\n\n$scheme-main: $white !default;\n$scheme-main-bis: $white-bis !default;\n$scheme-main-ter: $white-ter !default;\n$scheme-invert: $black !default;\n$scheme-invert-bis: $black-bis !default;\n$scheme-invert-ter: $black-ter !default;\n\n$background: $white-ter !default;\n\n$border: $grey-lighter !default;\n$border-hover: $grey-light !default;\n$border-light: $grey-lightest !default;\n$border-light-hover: $grey-light !default;\n\n// Text colors\n\n$text: $grey-dark !default;\n$text-invert: findColorInvert($text) !default;\n$text-light: $grey !default;\n$text-strong: $grey-darker !default;\n\n// Code colors\n\n$code: darken($red, 15%) !default;\n$code-background: $background !default;\n\n$pre: $text !default;\n$pre-background: $background !default;\n\n// Link colors\n\n$link: $blue !default;\n$link-invert: findColorInvert($link) !default;\n$link-light: findLightColor($link) !default;\n$link-dark: findDarkColor($link) !default;\n$link-visited: $purple !default;\n\n$link-hover: $grey-darker !default;\n$link-hover-border: $grey-light !default;\n\n$link-focus: $grey-darker !default;\n$link-focus-border: $blue !default;\n\n$link-active: $grey-darker !default;\n$link-active-border: $grey-dark !default;\n\n// Typography\n\n$family-primary: $family-sans-serif !default;\n$family-secondary: $family-sans-serif !default;\n$family-code: $family-monospace !default;\n\n$size-small: $size-7 !default;\n$size-normal: $size-6 !default;\n$size-medium: $size-5 !default;\n$size-large: $size-4 !default;\n\n// Effects\n\n$shadow: 0 0.5em 1em -0.125em rgba($scheme-invert, 0.1), 0 0px 0 1px rgba($scheme-invert, 0.02) !default;\n\n// Lists and maps\n$custom-colors: null !default;\n$custom-shades: null !default;\n\n$colors: mergeColorMaps((\"white\": ($white, $black), \"black\": ($black, $white), \"light\": ($light, $light-invert), \"dark\": ($dark, $dark-invert), \"primary\": ($primary, $primary-invert, $primary-light, $primary-dark), \"link\": ($link, $link-invert, $link-light, $link-dark), \"info\": ($info, $info-invert, $info-light, $info-dark), \"success\": ($success, $success-invert, $success-light, $success-dark), \"warning\": ($warning, $warning-invert, $warning-light, $warning-dark), \"danger\": ($danger, $danger-invert, $danger-light, $danger-dark)), $custom-colors) !default;\n\n$shades: mergeColorMaps((\"black-bis\": $black-bis, \"black-ter\": $black-ter, \"grey-darker\": $grey-darker, \"grey-dark\": $grey-dark, \"grey\": $grey, \"grey-light\": $grey-light, \"grey-lighter\": $grey-lighter, \"white-ter\": $white-ter, \"white-bis\": $white-bis), $custom-shades) !default;\n\n$sizes: $size-1 $size-2 $size-3 $size-4 $size-5 $size-6 $size-7 !default;\n",
		"// Colors\n\n$black:        hsl(0, 0%, 4%) !default;\n$black-bis:    hsl(0, 0%, 7%) !default;\n$black-ter:    hsl(0, 0%, 14%) !default;\n\n$grey-darker:  hsl(0, 0%, 21%) !default;\n$grey-dark:    hsl(0, 0%, 29%) !default;\n$grey:         hsl(0, 0%, 48%) !default;\n$grey-light:   hsl(0, 0%, 71%) !default;\n$grey-lighter: hsl(0, 0%, 86%) !default;\n$grey-lightest: hsl(0, 0%, 93%) !default;\n\n$white-ter:    hsl(0, 0%, 96%) !default;\n$white-bis:    hsl(0, 0%, 98%) !default;\n$white:        hsl(0, 0%, 100%) !default;\n\n$orange:       hsl(14,  100%, 53%) !default;\n$yellow:       hsl(44,  100%, 77%) !default;\n$green:        hsl(153, 53%,  53%) !default;\n$turquoise:    hsl(171, 100%, 41%) !default;\n$cyan:         hsl(207, 61%,  53%) !default;\n$blue:         hsl(229, 53%,  53%) !default;\n$purple:       hsl(271, 100%, 71%) !default;\n$red:          hsl(348, 86%, 61%) !default;\n\n// Typography\n\n$family-sans-serif: BlinkMacSystemFont, -apple-system, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif !default;\n$family-monospace: monospace !default;\n$render-mode: optimizeLegibility !default;\n\n$size-1: 3rem !default;\n$size-2: 2.5rem !default;\n$size-3: 2rem !default;\n$size-4: 1.5rem !default;\n$size-5: 1.25rem !default;\n$size-6: 1rem !default;\n$size-7: 0.75rem !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Spacing\n\n$block-spacing: 1.5rem !default;\n\n// Responsiveness\n\n// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px !default;\n// 960, 1152, and 1344 have been chosen because they are divisible by both 12 and 16\n$tablet: 769px !default;\n// 960px container + 4rem\n$desktop: 960px + (2 * $gap) !default;\n// 1152px container + 4rem\n$widescreen: 1152px + (2 * $gap) !default;\n$widescreen-enabled: true !default;\n// 1344px container + 4rem\n$fullhd: 1344px + (2 * $gap) !default;\n$fullhd-enabled: true !default;\n\n// Miscellaneous\n\n$easing: ease-out !default;\n$radius-small: 2px !default;\n$radius: 4px !default;\n$radius-large: 6px !default;\n$radius-rounded: 9999px !default;\n$speed: 86ms !default;\n\n// Flags\n\n$variable-columns: true !default;\n$rtl: false !default;\n",
		"@function mergeColorMaps($bulma-colors, $custom-colors) {\n  // We return at least Bulma's hard-coded colors\n  $merged-colors: $bulma-colors;\n\n  // We want a map as input\n  @if type-of($custom-colors) == 'map' {\n    @each $name, $components in $custom-colors {\n      // The color name should be a string\n      // and the components either a single color\n      // or a colors list with at least one element\n      @if type-of($name) == 'string' and (type-of($components) == 'list' or type-of($components) == 'color') and length($components) >= 1 {\n        $color-base: null;\n        $color-invert: null;\n        $color-light: null;\n        $color-dark: null;\n        $value: null;\n\n        // The param can either be a single color\n        // or a list of 2 colors\n        @if type-of($components) == 'color' {\n          $color-base: $components;\n          $color-invert: findColorInvert($color-base);\n          $color-light: findLightColor($color-base);\n          $color-dark: findDarkColor($color-base); }\n        @else if type-of($components) == 'list' {\n          $color-base: nth($components, 1);\n          // If Invert, Light and Dark are provided\n          @if length($components) > 3 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: nth($components, 4);\n }            // If only Invert and Light are provided\n          @else if length($components) > 2 {\n            $color-invert: nth($components, 2);\n            $color-light: nth($components, 3);\n            $color-dark: findDarkColor($color-base);\n }            // If only Invert is provided\n          @else {\n            $color-invert: nth($components, 2);\n            $color-light: findLightColor($color-base);\n            $color-dark: findDarkColor($color-base); } }\n\n        $value: ($color-base, $color-invert, $color-light, $color-dark);\n\n        // We only want to merge the map if the color base is an actual color\n        @if type-of($color-base) == 'color' {\n          // We merge this colors elements as map with Bulma's colors map\n          // (we can override them this way, no multiple definition for the same name)\n          // $merged-colors: map_merge($merged-colors, ($name: ($color-base, $color-invert, $color-light, $color-dark)))\n          $merged-colors: map_merge($merged-colors, ($name: $value)); } } } }\n\n  @return $merged-colors; }\n\n@function powerNumber($number, $exp) {\n  $value: 1;\n  @if $exp > 0 {\n    @for $i from 1 through $exp {\n      $value: $value * $number; } }\n  @else if $exp < 0 {\n    @for $i from 1 through -$exp {\n      $value: divide($value, $number); } }\n  @return $value; }\n\n@function colorLuminance($color) {\n  @if type-of($color) != 'color' {\n    @return 0.55; }\n  $color-rgb: ('red': red($color),'green': green($color),'blue': blue($color));\n  @each $name, $value in $color-rgb {\n    $adjusted: 0;\n    $value: divide($value, 255);\n    @if $value < 0.03928 {\n      $value: divide($value, 12.92); }\n    @else {\n      $value: divide(($value + .055), 1.055);\n      $value: powerNumber($value, 2); }\n    $color-rgb: map-merge($color-rgb, ($name: $value)); }\n  @return (map-get($color-rgb, 'red') * .2126) + (map-get($color-rgb, 'green') * .7152) + (map-get($color-rgb, 'blue') * .0722); }\n\n@function findColorInvert($color) {\n  @if (colorLuminance($color) > 0.55) {\n    @return rgba(#000, 0.7); }\n  @else {\n    @return #fff; } }\n\n@function findLightColor($color) {\n  @if type-of($color) == 'color' {\n    $l: 96%;\n    @if lightness($color) > 96% {\n      $l: lightness($color); }\n    @return change-color($color, $lightness: $l); }\n  @return $background; }\n\n@function findDarkColor($color) {\n  @if type-of($color) == 'color' {\n    $base-l: 29%;\n    $luminance: colorLuminance($color);\n    $luminance-delta: (0.53 - $luminance);\n    $target-l: round($base-l + ($luminance-delta * 53));\n    @return change-color($color, $lightness: max($base-l, $target-l)); }\n  @return $text-strong; }\n\n@function bulmaRgba($color, $alpha) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return rgba($color, $alpha); }\n\n@function bulmaDarken($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return darken($color, $amount); }\n\n@function bulmaLighten($color, $amount) {\n  @if type-of($color) != 'color' {\n    @return $color; }\n  @return lighten($color, $amount); }\n\n// Custom divide function by @mdo from https://github.com/twbs/bootstrap/pull/34245\n// Replaces old slash division deprecated in Dart Sass\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  $quotient: 0;\n  $remainder: $dividend;\n  @if $dividend == 0 {\n    @return 0; }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\"; }\n  @if $divisor == 1 {\n    @return $dividend; }\n  @while $remainder >= $divisor {\n    $quotient: $quotient + 1;\n    $remainder: $remainder - $divisor; }\n  @if $remainder > 0 and $precision > 0 {\n    $remainder: divide($remainder * 10, $divisor, $precision - 1) * .1; }\n  @return ($quotient + $remainder) * $sign; }\n",
		"/* custom prism theme */\n\n@mixin prism-light {\n  --prism-grey: #93a1a1;\n  --prism-blue: #7c91bd;\n  --prism-cyan: #8b81c3;\n  --prism-entity: #657b83;\n  --prism-green: #51a2a0;\n  --prism-yellow: #ee7800;\n  --prism-orange: #e45435;\n}\n\n@mixin prism-dark {\n  --prism-grey: #93a1a1;\n  --prism-blue: #95abd7;\n  --prism-cyan: #bab1df;\n  --prism-entity: #657b83;\n  --prism-green: #8ec298;\n  --prism-yellow: #e3c26a;\n  --prism-orange: #ee869a;\n}\n\nbody[data-theme='auto'] {\n  @include prism-light();\n\n  @media (prefers-color-scheme: dark) {\n    @include prism-dark();\n  }\n}\nbody[data-theme='light'] {\n  @include prism-light();\n}\nbody[data-theme='dark'] {\n  @include prism-dark();\n}\n\ncode[class*='language-'],\npre[class*='language-'] {\n  tab-size: 2;\n}\n\n.token.important,\n.token.bold {\n  font-weight: 600;\n}\n.token.italic {\n  font-style: italic;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n  color: var(--prism-grey);\n}\n\n.token.property,\n.token.tag,\n.token.boolean,\n.token.number,\n.token.constant,\n.token.symbol,\n.token.deleted {\n  color: var(--prism-blue);\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.url,\n.token.inserted {\n  color: var(--prism-cyan);\n}\n\n.token.entity {\n  color: var(--prism-entity);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n  color: var(--prism-green);\n}\n\n.token.function,\n.token.class-name {\n  color: var(--prism-yellow);\n}\n\n.token.regex,\n.token.important,\n.token.variable {\n  color: var(--prism-orange);\n}\n",
		"a {\n  color: var(--color-primary);\n  &:hover {\n    color: var(--color-secondary);\n  }\n}\n\nstrong,\nb {\n  font-weight: 400 !important;\n  color: var(--color-primary);\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: 400 !important;\n}\n\n.markdown.content {\n  h1,\n  h5,\n  h6 {\n    display: none;\n  }\n\n  h2 {\n    font-size: $amzrk2-font-size-xl;\n    margin: 1.375rem 0 1rem 0;\n    color: var(--color-primary);\n\n    &:first-child {\n      margin-top: 0; // do not show margin as first h2\n    }\n  }\n\n  h3 {\n    font-size: $amzrk2-font-size-md;\n    margin: 1.25rem 0 1rem 0;\n    color: var(--color-primary);\n  }\n\n  h4 {\n    font-size: $amzrk2-font-size-base;\n    margin: 1.125rem 0 1rem 0;\n    color: var(--color-primary);\n  }\n\n  ul {\n    list-style-type: '- ';\n  }\n\n  ul,\n  ol {\n    margin-left: 1.25rem;\n  }\n\n  img {\n    border-radius: $amzrk2-radius;\n    max-width: 100%;\n    display: block;\n  }\n\n  code,\n  tt {\n    background-color: var(--color-wrapper);\n    border-radius: $amzrk2-radius;\n    padding: 0.15em 0.3em;\n    color: inherit;\n    font-size: $amzrk2-font-size-sm;\n    word-wrap: normal;\n    br {\n      display: none;\n    }\n  }\n\n  pre {\n    border-radius: $amzrk2-radius;\n    background-color: var(--color-wrapper);\n    color: inherit;\n    overflow-x: auto;\n\n    & > code {\n      background-color: transparent;\n      border-radius: none;\n      padding: 0;\n    }\n\n    @include customScrollbar('x');\n  }\n\n  blockquote {\n    border-left: $amzrk2-divider;\n  }\n\n  table {\n    background: transparent;\n\n    &.is-narrow {\n      font-size: $amzrk2-font-size-sm;\n    }\n\n    th {\n      color: var(--color-primary);\n      font-weight: 400;\n      font-size: $amzrk2-font-size-base;\n    }\n\n    td,\n    th {\n      border-color: var(--color-font);\n    }\n  }\n}\n\ninput {\n  min-width: 0; // fix mobile input overflow\n}\n",
		"* {\n  box-sizing: border-box;\n  scroll-behavior: smooth;\n}\n\n/* sticky footer */\nhtml,\nbody {\n  min-height: 100vh;\n}\n\nbody {\n  background-color: var(--color-body);\n  color: var(--color-font);\n  display: flex;\n  flex-direction: column;\n}\n\nmain {\n  flex: 1 1 auto;\n}\n\nheader,\nfooter {\n  flex: 0 0 auto;\n}\n\n/* index fixer */\nheader {\n  z-index: 3;\n}\nfooter {\n  z-index: 1;\n}\nmain {\n  z-index: 2;\n  .container {\n    z-index: 1;\n    .column.is-three-quarters {\n      z-index: 1;\n    }\n    .column.is-one-quarter {\n      z-index: 2;\n    }\n  }\n}\n.medium-zoom-overlay {\n  z-index: 4;\n}\n.medium-zoom-image.medium-zoom-image--opened {\n  z-index: 5;\n}\n\n/* lazyload animation */\n.lazyload,\n.lazyloading {\n  opacity: 0;\n}\n.lazyloaded {\n  opacity: 1;\n  transition: opacity 300ms;\n}\n",
		".navbar {\n  background-color: var(--color-bg);\n  box-shadow: var(--shadow);\n\n  .container {\n    height: $amzrk2-navbar-height;\n    display: flex;\n    align-items: center;\n  }\n\n  .navbar-item {\n    display: block;\n    padding: 0 $amzrk2-space-sm;\n    height: $amzrk2-navbar-height;\n    line-height: $amzrk2-navbar-height;\n    cursor: pointer;\n\n    &:hover {\n      color: var(--color-primary);\n      background-color: var(--color-hover);\n    }\n\n    &.active {\n      color: var(--color-primary);\n    }\n  }\n\n  a,\n  a:hover {\n    color: var(--color-font);\n  }\n\n  .navbar-brand {\n    flex: 0 0 auto;\n\n    .navbar-item {\n      font-size: $amzrk2-font-size-lg;\n      padding: 0 $amzrk2-space-base;\n    }\n  }\n\n  .navbar-menu {\n    flex: 1 1 auto;\n    display: flex;\n  }\n\n  .navbar-start {\n    flex: 1 1 auto;\n    display: flex;\n  }\n\n  .navbar-end {\n    flex: 0 0 auto;\n    justify-self: end;\n    display: flex;\n    padding-right: $amzrk2-space-base - $amzrk2-space-sm + 0.05rem;\n    font-size: $amzrk2-font-size-md;\n  }\n}\n",
		".card {\n  background-color: var(--color-bg);\n  box-shadow: var(--shadow);\n  border-radius: $amzrk2-radius;\n  padding: $amzrk2-space-base;\n}\n\n.sticky {\n  position: sticky;\n  top: $amzrk2-space-base;\n}\n\n.card-info {\n  text-align: center;\n\n  .avatar {\n    margin: 0 auto 1rem auto;\n    width: 5rem;\n    user-select: none;\n    border-radius: $amzrk2-radius;\n    overflow: hidden;\n  }\n\n  .info {\n    & > span {\n      display: block;\n    }\n    text-align: center;\n    font-size: $amzrk2-font-size-sm;\n  }\n  .info-name {\n    font-size: $amzrk2-font-size-lg;\n  }\n  .info-para {\n    margin-top: 0.25rem;\n    margin-bottom: 0.75rem;\n  }\n\n  .counter {\n    display: flex;\n  }\n  .counter-wrapper {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n  }\n  .counter-data {\n    font-size: $amzrk2-font-size-md;\n    color: var(--color-primary);\n  }\n  .counter-name {\n    font-size: $amzrk2-font-size-sm;\n  }\n}\n\n.card-links {\n  display: flex;\n  padding: 0;\n  justify-content: center;\n\n  & > a {\n    display: block;\n    color: inherit;\n    flex: 0 1 auto;\n    height: $amzrk2-navbar-height-sm;\n    text-align: center;\n    line-height: $amzrk2-navbar-height-sm;\n    padding: 0 $amzrk2-space-sm;\n    cursor: pointer;\n\n    &:hover {\n      color: var(--color-primary);\n      background-color: var(--color-hover);\n    }\n\n    // prevent overflow on $tablet - $desktop\n    @media screen and (max-width: $desktop) {\n      padding: 0 0.725rem;\n    }\n  }\n}\n\n.card.toc {\n  padding: 1.125rem;\n}\n\n#TableOfContents {\n  overflow-y: auto;\n  overflow-x: hidden;\n  max-height: $amzrk2-toc-height;\n  @include customScrollbar('y');\n\n  a {\n    white-space: nowrap;\n    color: var(--color-font);\n  }\n\n  li a {\n    display: block;\n    height: 2rem;\n    line-height: 2rem;\n    color: var(--color-font);\n    padding: 0 0.375rem;\n    border-radius: $amzrk2-radius;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    &:hover {\n      color: var(--color-primary);\n      background-color: var(--color-hover);\n    }\n  }\n\n  & > ul {\n    font-size: $amzrk2-font-size-sm;\n\n    & > li {\n      & > ul {\n        margin-left: 0.375rem;\n        padding: 0 0.25rem;\n        border-left: $amzrk2-divider;\n        font-size: $amzrk2-font-size-sm * 0.9;\n\n        a {\n          height: 1.875rem;\n          line-height: 1.875rem;\n        }\n      }\n    }\n  }\n}\n",
		".footer {\n  background-color: var(--color-bg);\n  box-shadow: var(--shadow);\n  font-size: $amzrk2-font-size-sm;\n\n  .container {\n    height: 5rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 $block-spacing;\n\n    @media screen and (max-width: $tablet) {\n      flex-direction: column;\n      justify-content: center;\n    }\n\n    span {\n      overflow: hidden;\n      white-space: nowrap;\n    }\n  }\n}\n",
		"@media screen and (max-width: $tablet) {\n  .main-columns {\n    display: flex;\n    flex-direction: column-reverse;\n  }\n}\n\n.main-container {\n  padding: $amzrk2-space-base;\n}\n\n.main-sidebar {\n  .card:not(:last-child) {\n    margin-bottom: $amzrk2-space-base;\n  }\n}\n",
		".list-container {\n  padding: $amzrk2-space-base;\n}\n\n.list-sidebar {\n  .card:not(:last-child) {\n    margin-bottom: $amzrk2-space-base;\n  }\n}\n\n.list-content {\n  .card {\n    padding: 0;\n  }\n  .card:not(:last-child) {\n    margin-bottom: $amzrk2-space-base;\n  }\n}\n\n.list-image {\n  img {\n    display: block;\n    overflow: hidden;\n  }\n  border-radius: $amzrk2-radius $amzrk2-radius 0 0;\n}\n.list-box {\n  padding: $amzrk2-space-base;\n}\n.list-title {\n  font-size: $amzrk2-font-size-xl;\n  margin-bottom: $amzrk2-space-sm;\n}\n.list-summary {\n  margin-bottom: $amzrk2-space-sm;\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    display: none;\n  }\n}\n.list-meta {\n  font-size: $amzrk2-font-size-sm;\n  color: var(--color-primary);\n}\n\n.tag-list {\n  padding: $amzrk2-space-base !important;\n  display: flex;\n  flex-wrap: wrap;\n}\n.tag-item {\n  color: var(--color-primary);\n  margin-right: $amzrk2-space-sm;\n}\n",
		".single-container {\n  padding: $amzrk2-space-base;\n}\n\n.single-sidebar {\n  .card:not(:last-child) {\n    margin-bottom: $amzrk2-space-base;\n  }\n}\n\n.single-content {\n  .card {\n    padding: 0;\n  }\n  .card:not(:last-child) {\n    margin-bottom: $amzrk2-space-base;\n  }\n}\n\n.post-image {\n  img {\n    display: block;\n    overflow: hidden;\n  }\n  border-radius: $amzrk2-radius $amzrk2-radius 0 0;\n}\n.post-box {\n  padding: $amzrk2-space-base;\n  padding-bottom: 0;\n}\n.post-title {\n  font-size: $amzrk2-font-size-xl;\n  margin-bottom: $amzrk2-space-sm;\n  color: var(--color-primary);\n}\n.post-meta {\n  font-size: $amzrk2-font-size-sm;\n  color: var(--color-primary);\n}\n.post-content {\n  padding: $amzrk2-space-base;\n}\n",
		".list-meta,\n.post-meta {\n  & > span:not(:first-child) {\n    padding-left: 1rem;\n  }\n\n  & > span:nth-child(3) {\n    a:not(:last-child) {\n      margin-right: 0.375rem;\n    }\n  }\n\n  overflow-x: auto;\n  white-space: nowrap;\n  @include customScrollbar('x');\n}\n",
		".list-pagination {\n  display: flex;\n  padding: 0 $amzrk2-space-base;\n  justify-content: center;\n\n  & > a {\n    display: block;\n    color: inherit;\n    flex: 0 1 auto;\n    height: $amzrk2-navbar-height-sm;\n    line-height: $amzrk2-navbar-height-sm;\n    padding: 0 $amzrk2-space-sm;\n    cursor: pointer;\n\n    &:hover {\n      color: var(--color-primary);\n      background-color: var(--color-hover);\n    }\n    &.pag-current {\n      color: var(--color-primary);\n    }\n  }\n}\n",
		".search-ctrl {\n  padding: $amzrk2-space-base !important;\n}\n\n.search-form {\n  display: flex;\n\n  input {\n    flex: 1 1 auto;\n  }\n\n  button {\n    flex: 0 0 auto;\n    outline: none;\n    border: none;\n    border-radius: $amzrk2-radius;\n    cursor: pointer;\n    color: var(--color-font);\n    background-color: var(--color-wrapper);\n    margin-left: $amzrk2-space-sm;\n    padding: 0 $amzrk2-space-sm;\n\n    &:hover {\n      color: var(--color-primary);\n      background-color: var(--color-hover);\n    }\n  }\n}\n",
		"// mobile fixed navbar\nmain {\n  @media screen and (max-width: $tablet) {\n    margin-top: $amzrk2-navbar-height-sm * 2;\n  }\n}\n\n// mobile navbar\n.navbar {\n  @media screen and (max-width: $tablet) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n\n    .container {\n      height: $amzrk2-navbar-height-sm * 2;\n      flex-direction: column;\n      font-size: $amzrk2-font-size-sm;\n    }\n\n    .navbar-item {\n      height: $amzrk2-navbar-height-sm;\n      line-height: $amzrk2-navbar-height-sm;\n    }\n\n    .navbar-brand .navbar-item {\n      font-size: $amzrk2-font-size-md;\n    }\n\n    .navbar-end .navbar-item {\n      font-size: $amzrk2-font-size-sm;\n    }\n  }\n\n  @media screen and (max-width: 26.25rem) {\n    .navbar-start .navbar-item {\n      padding: 0 0.625rem;\n    }\n    .navbar-end .navbar-item {\n      padding: 0 0.75rem;\n    }\n  }\n\n  @media screen and (max-width: 21.875rem) {\n    .navbar-start .navbar-item {\n      padding: 0 0.375rem;\n    }\n    .navbar-end .navbar-item {\n      padding: 0 0.5rem;\n    }\n  }\n}\n\n// show toc btn instead of rss on mob\n#ctrl-rss {\n  display: block;\n}\n#ctrl-toc {\n  display: none;\n}\n@media screen and (max-width: $tablet) {\n  body[data-section='single'] {\n    #ctrl-rss {\n      display: none;\n    }\n    #ctrl-toc {\n      display: block;\n    }\n  }\n}\n\n// mobile table of contents\n@media screen and (max-width: $tablet) {\n  #TableOfContents {\n    max-height: 100%;\n  }\n\n  .card.toc {\n    position: fixed;\n    top: $amzrk2-navbar-height-sm * 2;\n    right: 0;\n    bottom: 0;\n    border-radius: 0;\n    transition: all 250ms ease-in-out;\n    max-width: 15rem;\n  }\n  // remove unused margin after info card\n  .column.single-sidebar.is-one-quarter .card:first-child {\n    margin-bottom: 0;\n  }\n  .card.toc.hidden {\n    box-shadow: none;\n    right: -15rem;\n  }\n}\n\n// mobile card margin fix\n@media screen and (max-width: $tablet) {\n  .card-links {\n    margin-bottom: 0 !important;\n  }\n}\n\n// mobile small card margin\n@media screen and (max-width: $tablet) {\n  // container\n  .main-container,\n  .list-container,\n  .single-container {\n    padding: 1rem;\n  }\n  // card margins\n  .main-sidebar,\n  .list-content,\n  .list-sidebar,\n  .single-content,\n  .single-sidebar {\n    .card:not(:last-child) {\n      margin-bottom: 1rem;\n    }\n  }\n  // index\n  .main-sidebar {\n    padding-bottom: 0.25rem;\n  }\n  .main-content {\n    padding-bottom: 0.75rem;\n  }\n  // list page\n  .list-content:not(.main-content) {\n    padding-bottom: 0.25rem;\n  }\n  // single page\n  .single-content:not(.main-content) {\n    padding-bottom: 0.25rem;\n  }\n}\n\n// mobile optimized link card\n@media screen and (max-width: $tablet) {\n  .card-links > a {\n    width: 2rem + 2 * $amzrk2-space-sm;\n  }\n}\n"
	],
	"names": [],
	"mappings": "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"
}